
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BIN_INTEGER BOOLEAN COMMA COMMENT DOT EQUALS FLOAT HEX_INTEGER IDENTIFIER INTEGER LBRACE LBRACKET LITERAL_MULTILINE_STRING LITERAL_STRING LOCAL_DATE LOCAL_DATE_TIME LOCAL_TIME MULTILINE_STRING NEWLINE OCT_INTEGER OFFSET_DATE_TIME RBRACE RBRACKET STRINGtoml : expression_listexpression_list : expressionexpression_list : expression expression_listexpression : key_val\n                    | table\n                    | inline_table\n                    | table_arraykey_val : key EQUALS valuekey : simple_keykey : dotted_keysimple_key : quoted_keysimple_key : bare_keyquoted_key : STRING\n                        | LITERAL_STRINGbare_key : IDENTIFIERbare_key : INTEGERdotted_key : simple_key DOT keydotted_key : FLOATvalue : STRING\n                | LITERAL_STRINGvalue : MULTILINE_STRING\n                | LITERAL_MULTILINE_STRINGvalue : BOOLEANvalue : OFFSET_DATE_TIME\n                | LOCAL_DATE_TIME\n                | LOCAL_DATE\n                | LOCAL_TIMEvalue : INTEGER\n                | HEX_INTEGER\n                | OCT_INTEGER\n                | BIN_INTEGERvalue : arrayvalue : FLOATvalue : inline_tablearray : LBRACKET array_contentarray_content : RBRACKETarray_content : value_list RBRACKETvalue_list : valuevalue_list : value COMMA value_listtable : LBRACKET key RBRACKETinline_table : LBRACE inline_contentinline_content : RBRACEinline_content : inline_list RBRACEinline_list : expressioninline_list : expression COMMA inline_listtable_array : LBRACKET LBRACKET key RBRACKET RBRACKET'
    
_lr_action_items = {'LBRACKET':([0,3,4,5,6,7,9,10,21,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,58,59,60,],[9,9,-4,-5,-6,-7,22,9,46,-41,-42,-8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,46,-40,-43,9,-35,-36,-37,46,-46,]),'LBRACE':([0,3,4,5,6,7,10,21,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,58,59,60,],[10,10,-4,-5,-6,-7,10,10,-41,-42,-8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,10,-40,-43,10,-35,-36,-37,10,-46,]),'FLOAT':([0,3,4,5,6,7,9,10,21,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,58,59,60,],[15,15,-4,-5,-6,-7,15,15,44,15,-41,-42,15,-8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,44,-40,-43,15,-35,-36,-37,44,-46,]),'STRING':([0,3,4,5,6,7,9,10,21,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,58,59,60,],[16,16,-4,-5,-6,-7,16,16,30,16,-41,-42,16,-8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,30,-40,-43,16,-35,-36,-37,30,-46,]),'LITERAL_STRING':([0,3,4,5,6,7,9,10,21,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,58,59,60,],[17,17,-4,-5,-6,-7,17,17,31,17,-41,-42,17,-8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,31,-40,-43,17,-35,-36,-37,31,-46,]),'IDENTIFIER':([0,3,4,5,6,7,9,10,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,50,52,53,58,60,],[18,18,-4,-5,-6,-7,18,18,18,-41,-42,18,-8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-40,-43,18,-35,-36,-37,-46,]),'INTEGER':([0,3,4,5,6,7,9,10,21,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,52,53,58,59,60,],[19,19,-4,-5,-6,-7,19,19,39,19,-41,-42,19,-8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,39,-40,-43,19,-35,-36,-37,39,-46,]),'$end':([1,2,3,4,5,6,7,20,24,25,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,52,53,58,60,],[0,-1,-2,-4,-5,-6,-7,-3,-41,-42,-8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-40,-43,-35,-36,-37,-46,]),'COMMA':([4,5,6,7,24,25,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,52,53,55,58,60,],[-4,-5,-6,-7,-41,-42,50,-8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-40,-43,-35,-36,59,-37,-46,]),'RBRACE':([4,5,6,7,10,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,49,52,53,57,58,60,],[-4,-5,-6,-7,25,-41,-42,49,-44,-8,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-40,-43,-35,-36,-45,-37,-46,]),'EQUALS':([8,11,12,13,14,15,16,17,18,19,51,],[21,-9,-10,-11,-12,-18,-13,-14,-15,-16,-17,]),'RBRACKET':([11,12,13,14,15,16,17,18,19,23,24,25,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,51,52,53,54,55,56,58,61,],[-9,-10,-11,-12,-18,-13,-14,-15,-16,48,-41,-42,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,53,56,-43,-17,-35,-36,58,-38,60,-37,-39,]),'DOT':([11,13,14,16,17,18,19,],[28,-11,-12,-13,-14,-15,-16,]),'MULTILINE_STRING':([21,46,59,],[32,32,32,]),'LITERAL_MULTILINE_STRING':([21,46,59,],[33,33,33,]),'BOOLEAN':([21,46,59,],[34,34,34,]),'OFFSET_DATE_TIME':([21,46,59,],[35,35,35,]),'LOCAL_DATE_TIME':([21,46,59,],[36,36,36,]),'LOCAL_DATE':([21,46,59,],[37,37,37,]),'LOCAL_TIME':([21,46,59,],[38,38,38,]),'HEX_INTEGER':([21,46,59,],[40,40,40,]),'OCT_INTEGER':([21,46,59,],[41,41,41,]),'BIN_INTEGER':([21,46,59,],[42,42,42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'toml':([0,],[1,]),'expression_list':([0,3,],[2,20,]),'expression':([0,3,10,50,],[3,3,27,27,]),'key_val':([0,3,10,50,],[4,4,4,4,]),'table':([0,3,10,50,],[5,5,5,5,]),'inline_table':([0,3,10,21,46,50,59,],[6,6,6,45,45,6,45,]),'table_array':([0,3,10,50,],[7,7,7,7,]),'key':([0,3,9,10,22,28,50,],[8,8,23,8,47,51,8,]),'simple_key':([0,3,9,10,22,28,50,],[11,11,11,11,11,11,11,]),'dotted_key':([0,3,9,10,22,28,50,],[12,12,12,12,12,12,12,]),'quoted_key':([0,3,9,10,22,28,50,],[13,13,13,13,13,13,13,]),'bare_key':([0,3,9,10,22,28,50,],[14,14,14,14,14,14,14,]),'inline_content':([10,],[24,]),'inline_list':([10,50,],[26,57,]),'value':([21,46,59,],[29,55,55,]),'array':([21,46,59,],[43,43,43,]),'array_content':([46,],[52,]),'value_list':([46,59,],[54,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> toml","S'",1,None,None,None),
  ('toml -> expression_list','toml',1,'p_toml','parser_toml.py',24),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser_toml.py',28),
  ('expression_list -> expression expression_list','expression_list',2,'p_expression_list_2','parser_toml.py',32),
  ('expression -> key_val','expression',1,'p_expression','parser_toml.py',36),
  ('expression -> table','expression',1,'p_expression','parser_toml.py',37),
  ('expression -> inline_table','expression',1,'p_expression','parser_toml.py',38),
  ('expression -> table_array','expression',1,'p_expression','parser_toml.py',39),
  ('key_val -> key EQUALS value','key_val',3,'p_key_val','parser_toml.py',43),
  ('key -> simple_key','key',1,'p_key','parser_toml.py',47),
  ('key -> dotted_key','key',1,'p_key_2','parser_toml.py',51),
  ('simple_key -> quoted_key','simple_key',1,'p_simple_key','parser_toml.py',55),
  ('simple_key -> bare_key','simple_key',1,'p_simple_key_2','parser_toml.py',59),
  ('quoted_key -> STRING','quoted_key',1,'p_quoted_key','parser_toml.py',63),
  ('quoted_key -> LITERAL_STRING','quoted_key',1,'p_quoted_key','parser_toml.py',64),
  ('bare_key -> IDENTIFIER','bare_key',1,'p_bare_key','parser_toml.py',68),
  ('bare_key -> INTEGER','bare_key',1,'p_bare_key_2','parser_toml.py',72),
  ('dotted_key -> simple_key DOT key','dotted_key',3,'p_dotted_key','parser_toml.py',76),
  ('dotted_key -> FLOAT','dotted_key',1,'p_dotted_key_2','parser_toml.py',80),
  ('value -> STRING','value',1,'p_value','parser_toml.py',85),
  ('value -> LITERAL_STRING','value',1,'p_value','parser_toml.py',86),
  ('value -> MULTILINE_STRING','value',1,'p_value_2','parser_toml.py',90),
  ('value -> LITERAL_MULTILINE_STRING','value',1,'p_value_2','parser_toml.py',91),
  ('value -> BOOLEAN','value',1,'p_value_3','parser_toml.py',95),
  ('value -> OFFSET_DATE_TIME','value',1,'p_value_4','parser_toml.py',99),
  ('value -> LOCAL_DATE_TIME','value',1,'p_value_4','parser_toml.py',100),
  ('value -> LOCAL_DATE','value',1,'p_value_4','parser_toml.py',101),
  ('value -> LOCAL_TIME','value',1,'p_value_4','parser_toml.py',102),
  ('value -> INTEGER','value',1,'p_value_5','parser_toml.py',106),
  ('value -> HEX_INTEGER','value',1,'p_value_5','parser_toml.py',107),
  ('value -> OCT_INTEGER','value',1,'p_value_5','parser_toml.py',108),
  ('value -> BIN_INTEGER','value',1,'p_value_5','parser_toml.py',109),
  ('value -> array','value',1,'p_value_6','parser_toml.py',113),
  ('value -> FLOAT','value',1,'p_value_7','parser_toml.py',117),
  ('value -> inline_table','value',1,'p_value_8','parser_toml.py',121),
  ('array -> LBRACKET array_content','array',2,'p_array','parser_toml.py',125),
  ('array_content -> RBRACKET','array_content',1,'p_array_content','parser_toml.py',129),
  ('array_content -> value_list RBRACKET','array_content',2,'p_array_content_2','parser_toml.py',133),
  ('value_list -> value','value_list',1,'p_value_list','parser_toml.py',137),
  ('value_list -> value COMMA value_list','value_list',3,'p_value_list_2','parser_toml.py',141),
  ('table -> LBRACKET key RBRACKET','table',3,'p_table','parser_toml.py',145),
  ('inline_table -> LBRACE inline_content','inline_table',2,'p_inline_table','parser_toml.py',149),
  ('inline_content -> RBRACE','inline_content',1,'p_inline_content','parser_toml.py',153),
  ('inline_content -> inline_list RBRACE','inline_content',2,'p_inline_content_2','parser_toml.py',157),
  ('inline_list -> expression','inline_list',1,'p_inline_list','parser_toml.py',161),
  ('inline_list -> expression COMMA inline_list','inline_list',3,'p_inline_list_2','parser_toml.py',165),
  ('table_array -> LBRACKET LBRACKET key RBRACKET RBRACKET','table_array',5,'p_table_array','parser_toml.py',169),
]
