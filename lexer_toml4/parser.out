Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> toml
Rule 1     toml -> expression_list
Rule 2     expression_list -> NEWLINE expression_list
Rule 3     expression_list -> expression NEWLINE expression_list
Rule 4     expression_list -> expression
Rule 5     expression -> comment
Rule 6     expression -> key_val
Rule 7     expression -> key_val comment
Rule 8     comment -> COMMENT_START comment_string
Rule 9     comment_string -> comment_char
Rule 10    comment_string -> comment_char comment_string
Rule 11    comment_char -> ASCII_CHAR
Rule 12    comment_char -> ASCII_DIGIT
Rule 13    comment_char -> UNICODE_CHAR
Rule 14    comment_char -> UNICODE_NUMBER
Rule 15    comment_char -> UNICODE_PUNCTUATION
Rule 16    comment_char -> COMMENT_START
Rule 17    comment_char -> DASH
Rule 18    comment_char -> UNDERSCORE
Rule 19    comment_char -> WHITESPACE
Rule 20    comment_char -> PLUS
Rule 21    key_val -> key ASSIGNMENT value
Rule 22    key -> simple_key
Rule 23    key -> dotted_key
Rule 24    simple_key -> bare_key
Rule 25    simple_key -> quoted_key
Rule 26    bare_key -> bare_key_sequence
Rule 27    bare_key_sequence -> bare_key_char
Rule 28    bare_key_sequence -> bare_key_char bare_key_sequence
Rule 29    bare_key_char -> ASCII_CHAR
Rule 30    bare_key_char -> ASCII_DIGIT
Rule 31    bare_key_char -> UNICODE_NUMBER
Rule 32    bare_key_char -> DASH
Rule 33    bare_key_char -> UNDERSCORE
Rule 34    quoted_key -> basic_string
Rule 35    quoted_key -> literal_string
Rule 36    dotted_key -> simple_key DOT simple_key
Rule 37    value -> basic_string
Rule 38    value -> literal_string
Rule 39    value -> integer
Rule 40    value -> float
Rule 41    value -> boolean
Rule 42    basic_string -> BASIC_STR_QUOTE BASIC_STR_QUOTE
Rule 43    basic_string -> BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE
Rule 44    basic_string_sequence -> basic_string_char
Rule 45    basic_string_sequence -> basic_string_char basic_string_sequence
Rule 46    basic_string_char -> ASCII_CHAR
Rule 47    basic_string_char -> ASCII_DIGIT
Rule 48    basic_string_char -> UNICODE_CHAR
Rule 49    basic_string_char -> UNICODE_NUMBER
Rule 50    basic_string_char -> UNICODE_PUNCTUATION
Rule 51    basic_string_char -> UNICODE_CONTROL
Rule 52    basic_string_char -> UNICODE_SYMBOL
Rule 53    basic_string_char -> UNICODE_SEPARATOR
Rule 54    basic_string_char -> UNICODE_PRIVATE_USE
Rule 55    basic_string_char -> LITERAL_STR_QUOTE
Rule 56    basic_string_char -> DASH
Rule 57    basic_string_char -> UNDERSCORE
Rule 58    basic_string_char -> WHITESPACE
Rule 59    basic_string_char -> DOT
Rule 60    basic_string_char -> COMMENT_START
Rule 61    basic_string_char -> PLUS
Rule 62    basic_string_char -> escape
Rule 63    literal_string -> LITERAL_STR_QUOTE LITERAL_STR_QUOTE
Rule 64    literal_string -> LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE
Rule 65    literal_string_sequence -> literal_string_char
Rule 66    literal_string_sequence -> literal_string_char literal_string_sequence
Rule 67    literal_string_char -> ASCII_CHAR
Rule 68    literal_string_char -> ASCII_DIGIT
Rule 69    literal_string_char -> UNICODE_CHAR
Rule 70    literal_string_char -> UNICODE_NUMBER
Rule 71    literal_string_char -> UNICODE_PUNCTUATION
Rule 72    literal_string_char -> UNICODE_CONTROL
Rule 73    literal_string_char -> UNICODE_SYMBOL
Rule 74    literal_string_char -> UNICODE_SEPARATOR
Rule 75    literal_string_char -> UNICODE_PRIVATE_USE
Rule 76    literal_string_char -> BASIC_STR_QUOTE
Rule 77    literal_string_char -> DASH
Rule 78    literal_string_char -> UNDERSCORE
Rule 79    literal_string_char -> WHITESPACE
Rule 80    literal_string_char -> DOT
Rule 81    literal_string_char -> COMMENT_START
Rule 82    literal_string_char -> REVERSE_SOLIDUS
Rule 83    literal_string_char -> PLUS
Rule 84    literal_string_char -> MINUS
Rule 85    escape -> REVERSE_SOLIDUS escape_char
Rule 86    escape_char -> LITERAL_STR_QUOTE
Rule 87    escape_char -> BASIC_STR_QUOTE
Rule 88    escape_char -> REVERSE_SOLIDUS
Rule 89    escape_char -> ASCII_CHAR
Rule 90    integer -> dec_int
Rule 91    dec_int -> dec_int_sequence
Rule 92    dec_int -> PLUS dec_int_sequence
Rule 93    dec_int -> DASH dec_int_sequence
Rule 94    dec_int_sequence -> dec_int_char
Rule 95    dec_int_sequence -> dec_int_char dec_int_sequence
Rule 96    dec_int_char -> ASCII_DIGIT
Rule 97    float -> dec_float
Rule 98    dec_float -> integer DOT integer
Rule 99    dec_float -> integer DOT integer exponent
Rule 100   dec_float -> integer exponent
Rule 101   exponent -> ASCII_CHAR integer
Rule 102   boolean -> true
Rule 103   boolean -> false
Rule 104   true -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR
Rule 105   false -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR

Terminals, with rules where they appear

ASCII_CHAR           : 11 29 46 67 89 101 104 104 104 104 105 105 105 105 105
ASCII_DIGIT          : 12 30 47 68 96
ASSIGNMENT           : 21
BASIC_STR_QUOTE      : 42 42 43 43 76 87
COMMENT_START        : 8 16 60 81
DASH                 : 17 32 56 77 93
DOT                  : 36 59 80 98 99
LITERAL_STR_QUOTE    : 55 63 63 64 64 86
MINUS                : 84
NEWLINE              : 2 3
PLUS                 : 20 61 83 92
REVERSE_SOLIDUS      : 82 85 88
UNDERSCORE           : 18 33 57 78
UNICODE_CHAR         : 13 48 69
UNICODE_CONTROL      : 51 72
UNICODE_NUMBER       : 14 31 49 70
UNICODE_PRIVATE_USE  : 54 75
UNICODE_PUNCTUATION  : 15 50 71
UNICODE_SEPARATOR    : 53 74
UNICODE_SYMBOL       : 52 73
WHITESPACE           : 19 58 79
error                : 

Nonterminals, with rules where they appear

bare_key             : 24
bare_key_char        : 27 28
bare_key_sequence    : 26 28
basic_string         : 34 37
basic_string_char    : 44 45
basic_string_sequence : 43 45
boolean              : 41
comment              : 5 7
comment_char         : 9 10
comment_string       : 8 10
dec_float            : 97
dec_int              : 90
dec_int_char         : 94 95
dec_int_sequence     : 91 92 93 95
dotted_key           : 23
escape               : 62
escape_char          : 85
exponent             : 99 100
expression           : 3 4
expression_list      : 1 2 3
false                : 103
float                : 40
integer              : 39 98 98 99 99 100 101
key                  : 21
key_val              : 6 7
literal_string       : 35 38
literal_string_char  : 65 66
literal_string_sequence : 64 66
quoted_key           : 25
simple_key           : 22 36 36
toml                 : 0
true                 : 102
value                : 21

Parsing method: LALR

state 0

    (0) S' -> . toml
    (1) toml -> . expression_list
    (2) expression_list -> . NEWLINE expression_list
    (3) expression_list -> . expression NEWLINE expression_list
    (4) expression_list -> . expression
    (5) expression -> . comment
    (6) expression -> . key_val
    (7) expression -> . key_val comment
    (8) comment -> . COMMENT_START comment_string
    (21) key_val -> . key ASSIGNMENT value
    (22) key -> . simple_key
    (23) key -> . dotted_key
    (24) simple_key -> . bare_key
    (25) simple_key -> . quoted_key
    (36) dotted_key -> . simple_key DOT simple_key
    (26) bare_key -> . bare_key_sequence
    (34) quoted_key -> . basic_string
    (35) quoted_key -> . literal_string
    (27) bare_key_sequence -> . bare_key_char
    (28) bare_key_sequence -> . bare_key_char bare_key_sequence
    (42) basic_string -> . BASIC_STR_QUOTE BASIC_STR_QUOTE
    (43) basic_string -> . BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE
    (63) literal_string -> . LITERAL_STR_QUOTE LITERAL_STR_QUOTE
    (64) literal_string -> . LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE
    (29) bare_key_char -> . ASCII_CHAR
    (30) bare_key_char -> . ASCII_DIGIT
    (31) bare_key_char -> . UNICODE_NUMBER
    (32) bare_key_char -> . DASH
    (33) bare_key_char -> . UNDERSCORE

    NEWLINE         shift and go to state 3
    COMMENT_START   shift and go to state 7
    BASIC_STR_QUOTE shift and go to state 17
    LITERAL_STR_QUOTE shift and go to state 18
    ASCII_CHAR      shift and go to state 19
    ASCII_DIGIT     shift and go to state 20
    UNICODE_NUMBER  shift and go to state 21
    DASH            shift and go to state 22
    UNDERSCORE      shift and go to state 23

    toml                           shift and go to state 1
    expression_list                shift and go to state 2
    expression                     shift and go to state 4
    comment                        shift and go to state 5
    key_val                        shift and go to state 6
    key                            shift and go to state 8
    simple_key                     shift and go to state 9
    dotted_key                     shift and go to state 10
    bare_key                       shift and go to state 11
    quoted_key                     shift and go to state 12
    bare_key_sequence              shift and go to state 13
    basic_string                   shift and go to state 14
    literal_string                 shift and go to state 15
    bare_key_char                  shift and go to state 16

state 1

    (0) S' -> toml .



state 2

    (1) toml -> expression_list .

    $end            reduce using rule 1 (toml -> expression_list .)


state 3

    (2) expression_list -> NEWLINE . expression_list
    (2) expression_list -> . NEWLINE expression_list
    (3) expression_list -> . expression NEWLINE expression_list
    (4) expression_list -> . expression
    (5) expression -> . comment
    (6) expression -> . key_val
    (7) expression -> . key_val comment
    (8) comment -> . COMMENT_START comment_string
    (21) key_val -> . key ASSIGNMENT value
    (22) key -> . simple_key
    (23) key -> . dotted_key
    (24) simple_key -> . bare_key
    (25) simple_key -> . quoted_key
    (36) dotted_key -> . simple_key DOT simple_key
    (26) bare_key -> . bare_key_sequence
    (34) quoted_key -> . basic_string
    (35) quoted_key -> . literal_string
    (27) bare_key_sequence -> . bare_key_char
    (28) bare_key_sequence -> . bare_key_char bare_key_sequence
    (42) basic_string -> . BASIC_STR_QUOTE BASIC_STR_QUOTE
    (43) basic_string -> . BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE
    (63) literal_string -> . LITERAL_STR_QUOTE LITERAL_STR_QUOTE
    (64) literal_string -> . LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE
    (29) bare_key_char -> . ASCII_CHAR
    (30) bare_key_char -> . ASCII_DIGIT
    (31) bare_key_char -> . UNICODE_NUMBER
    (32) bare_key_char -> . DASH
    (33) bare_key_char -> . UNDERSCORE

    NEWLINE         shift and go to state 3
    COMMENT_START   shift and go to state 7
    BASIC_STR_QUOTE shift and go to state 17
    LITERAL_STR_QUOTE shift and go to state 18
    ASCII_CHAR      shift and go to state 19
    ASCII_DIGIT     shift and go to state 20
    UNICODE_NUMBER  shift and go to state 21
    DASH            shift and go to state 22
    UNDERSCORE      shift and go to state 23

    expression_list                shift and go to state 24
    expression                     shift and go to state 4
    comment                        shift and go to state 5
    key_val                        shift and go to state 6
    key                            shift and go to state 8
    simple_key                     shift and go to state 9
    dotted_key                     shift and go to state 10
    bare_key                       shift and go to state 11
    quoted_key                     shift and go to state 12
    bare_key_sequence              shift and go to state 13
    basic_string                   shift and go to state 14
    literal_string                 shift and go to state 15
    bare_key_char                  shift and go to state 16

state 4

    (3) expression_list -> expression . NEWLINE expression_list
    (4) expression_list -> expression .

    NEWLINE         shift and go to state 25
    $end            reduce using rule 4 (expression_list -> expression .)


state 5

    (5) expression -> comment .

    NEWLINE         reduce using rule 5 (expression -> comment .)
    $end            reduce using rule 5 (expression -> comment .)


state 6

    (6) expression -> key_val .
    (7) expression -> key_val . comment
    (8) comment -> . COMMENT_START comment_string

    NEWLINE         reduce using rule 6 (expression -> key_val .)
    $end            reduce using rule 6 (expression -> key_val .)
    COMMENT_START   shift and go to state 7

    comment                        shift and go to state 26

state 7

    (8) comment -> COMMENT_START . comment_string
    (9) comment_string -> . comment_char
    (10) comment_string -> . comment_char comment_string
    (11) comment_char -> . ASCII_CHAR
    (12) comment_char -> . ASCII_DIGIT
    (13) comment_char -> . UNICODE_CHAR
    (14) comment_char -> . UNICODE_NUMBER
    (15) comment_char -> . UNICODE_PUNCTUATION
    (16) comment_char -> . COMMENT_START
    (17) comment_char -> . DASH
    (18) comment_char -> . UNDERSCORE
    (19) comment_char -> . WHITESPACE
    (20) comment_char -> . PLUS

    ASCII_CHAR      shift and go to state 30
    ASCII_DIGIT     shift and go to state 31
    UNICODE_CHAR    shift and go to state 32
    UNICODE_NUMBER  shift and go to state 33
    UNICODE_PUNCTUATION shift and go to state 34
    COMMENT_START   shift and go to state 27
    DASH            shift and go to state 35
    UNDERSCORE      shift and go to state 36
    WHITESPACE      shift and go to state 37
    PLUS            shift and go to state 38

    comment_string                 shift and go to state 28
    comment_char                   shift and go to state 29

state 8

    (21) key_val -> key . ASSIGNMENT value

    ASSIGNMENT      shift and go to state 39


state 9

    (22) key -> simple_key .
    (36) dotted_key -> simple_key . DOT simple_key

    ASSIGNMENT      reduce using rule 22 (key -> simple_key .)
    DOT             shift and go to state 40


state 10

    (23) key -> dotted_key .

    ASSIGNMENT      reduce using rule 23 (key -> dotted_key .)


state 11

    (24) simple_key -> bare_key .

    DOT             reduce using rule 24 (simple_key -> bare_key .)
    ASSIGNMENT      reduce using rule 24 (simple_key -> bare_key .)


state 12

    (25) simple_key -> quoted_key .

    DOT             reduce using rule 25 (simple_key -> quoted_key .)
    ASSIGNMENT      reduce using rule 25 (simple_key -> quoted_key .)


state 13

    (26) bare_key -> bare_key_sequence .

    DOT             reduce using rule 26 (bare_key -> bare_key_sequence .)
    ASSIGNMENT      reduce using rule 26 (bare_key -> bare_key_sequence .)


state 14

    (34) quoted_key -> basic_string .

    DOT             reduce using rule 34 (quoted_key -> basic_string .)
    ASSIGNMENT      reduce using rule 34 (quoted_key -> basic_string .)


state 15

    (35) quoted_key -> literal_string .

    DOT             reduce using rule 35 (quoted_key -> literal_string .)
    ASSIGNMENT      reduce using rule 35 (quoted_key -> literal_string .)


state 16

    (27) bare_key_sequence -> bare_key_char .
    (28) bare_key_sequence -> bare_key_char . bare_key_sequence
    (27) bare_key_sequence -> . bare_key_char
    (28) bare_key_sequence -> . bare_key_char bare_key_sequence
    (29) bare_key_char -> . ASCII_CHAR
    (30) bare_key_char -> . ASCII_DIGIT
    (31) bare_key_char -> . UNICODE_NUMBER
    (32) bare_key_char -> . DASH
    (33) bare_key_char -> . UNDERSCORE

    DOT             reduce using rule 27 (bare_key_sequence -> bare_key_char .)
    ASSIGNMENT      reduce using rule 27 (bare_key_sequence -> bare_key_char .)
    ASCII_CHAR      shift and go to state 19
    ASCII_DIGIT     shift and go to state 20
    UNICODE_NUMBER  shift and go to state 21
    DASH            shift and go to state 22
    UNDERSCORE      shift and go to state 23

    bare_key_char                  shift and go to state 16
    bare_key_sequence              shift and go to state 41

state 17

    (42) basic_string -> BASIC_STR_QUOTE . BASIC_STR_QUOTE
    (43) basic_string -> BASIC_STR_QUOTE . basic_string_sequence BASIC_STR_QUOTE
    (44) basic_string_sequence -> . basic_string_char
    (45) basic_string_sequence -> . basic_string_char basic_string_sequence
    (46) basic_string_char -> . ASCII_CHAR
    (47) basic_string_char -> . ASCII_DIGIT
    (48) basic_string_char -> . UNICODE_CHAR
    (49) basic_string_char -> . UNICODE_NUMBER
    (50) basic_string_char -> . UNICODE_PUNCTUATION
    (51) basic_string_char -> . UNICODE_CONTROL
    (52) basic_string_char -> . UNICODE_SYMBOL
    (53) basic_string_char -> . UNICODE_SEPARATOR
    (54) basic_string_char -> . UNICODE_PRIVATE_USE
    (55) basic_string_char -> . LITERAL_STR_QUOTE
    (56) basic_string_char -> . DASH
    (57) basic_string_char -> . UNDERSCORE
    (58) basic_string_char -> . WHITESPACE
    (59) basic_string_char -> . DOT
    (60) basic_string_char -> . COMMENT_START
    (61) basic_string_char -> . PLUS
    (62) basic_string_char -> . escape
    (85) escape -> . REVERSE_SOLIDUS escape_char

    BASIC_STR_QUOTE shift and go to state 42
    ASCII_CHAR      shift and go to state 45
    ASCII_DIGIT     shift and go to state 46
    UNICODE_CHAR    shift and go to state 47
    UNICODE_NUMBER  shift and go to state 48
    UNICODE_PUNCTUATION shift and go to state 49
    UNICODE_CONTROL shift and go to state 50
    UNICODE_SYMBOL  shift and go to state 51
    UNICODE_SEPARATOR shift and go to state 52
    UNICODE_PRIVATE_USE shift and go to state 53
    LITERAL_STR_QUOTE shift and go to state 54
    DASH            shift and go to state 55
    UNDERSCORE      shift and go to state 56
    WHITESPACE      shift and go to state 57
    DOT             shift and go to state 58
    COMMENT_START   shift and go to state 59
    PLUS            shift and go to state 60
    REVERSE_SOLIDUS shift and go to state 62

    basic_string_sequence          shift and go to state 43
    basic_string_char              shift and go to state 44
    escape                         shift and go to state 61

state 18

    (63) literal_string -> LITERAL_STR_QUOTE . LITERAL_STR_QUOTE
    (64) literal_string -> LITERAL_STR_QUOTE . literal_string_sequence LITERAL_STR_QUOTE
    (65) literal_string_sequence -> . literal_string_char
    (66) literal_string_sequence -> . literal_string_char literal_string_sequence
    (67) literal_string_char -> . ASCII_CHAR
    (68) literal_string_char -> . ASCII_DIGIT
    (69) literal_string_char -> . UNICODE_CHAR
    (70) literal_string_char -> . UNICODE_NUMBER
    (71) literal_string_char -> . UNICODE_PUNCTUATION
    (72) literal_string_char -> . UNICODE_CONTROL
    (73) literal_string_char -> . UNICODE_SYMBOL
    (74) literal_string_char -> . UNICODE_SEPARATOR
    (75) literal_string_char -> . UNICODE_PRIVATE_USE
    (76) literal_string_char -> . BASIC_STR_QUOTE
    (77) literal_string_char -> . DASH
    (78) literal_string_char -> . UNDERSCORE
    (79) literal_string_char -> . WHITESPACE
    (80) literal_string_char -> . DOT
    (81) literal_string_char -> . COMMENT_START
    (82) literal_string_char -> . REVERSE_SOLIDUS
    (83) literal_string_char -> . PLUS
    (84) literal_string_char -> . MINUS

    LITERAL_STR_QUOTE shift and go to state 63
    ASCII_CHAR      shift and go to state 66
    ASCII_DIGIT     shift and go to state 67
    UNICODE_CHAR    shift and go to state 68
    UNICODE_NUMBER  shift and go to state 69
    UNICODE_PUNCTUATION shift and go to state 70
    UNICODE_CONTROL shift and go to state 71
    UNICODE_SYMBOL  shift and go to state 72
    UNICODE_SEPARATOR shift and go to state 73
    UNICODE_PRIVATE_USE shift and go to state 74
    BASIC_STR_QUOTE shift and go to state 75
    DASH            shift and go to state 76
    UNDERSCORE      shift and go to state 77
    WHITESPACE      shift and go to state 78
    DOT             shift and go to state 79
    COMMENT_START   shift and go to state 80
    REVERSE_SOLIDUS shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83

    literal_string_sequence        shift and go to state 64
    literal_string_char            shift and go to state 65

state 19

    (29) bare_key_char -> ASCII_CHAR .

    ASCII_CHAR      reduce using rule 29 (bare_key_char -> ASCII_CHAR .)
    ASCII_DIGIT     reduce using rule 29 (bare_key_char -> ASCII_CHAR .)
    UNICODE_NUMBER  reduce using rule 29 (bare_key_char -> ASCII_CHAR .)
    DASH            reduce using rule 29 (bare_key_char -> ASCII_CHAR .)
    UNDERSCORE      reduce using rule 29 (bare_key_char -> ASCII_CHAR .)
    DOT             reduce using rule 29 (bare_key_char -> ASCII_CHAR .)
    ASSIGNMENT      reduce using rule 29 (bare_key_char -> ASCII_CHAR .)


state 20

    (30) bare_key_char -> ASCII_DIGIT .

    ASCII_CHAR      reduce using rule 30 (bare_key_char -> ASCII_DIGIT .)
    ASCII_DIGIT     reduce using rule 30 (bare_key_char -> ASCII_DIGIT .)
    UNICODE_NUMBER  reduce using rule 30 (bare_key_char -> ASCII_DIGIT .)
    DASH            reduce using rule 30 (bare_key_char -> ASCII_DIGIT .)
    UNDERSCORE      reduce using rule 30 (bare_key_char -> ASCII_DIGIT .)
    DOT             reduce using rule 30 (bare_key_char -> ASCII_DIGIT .)
    ASSIGNMENT      reduce using rule 30 (bare_key_char -> ASCII_DIGIT .)


state 21

    (31) bare_key_char -> UNICODE_NUMBER .

    ASCII_CHAR      reduce using rule 31 (bare_key_char -> UNICODE_NUMBER .)
    ASCII_DIGIT     reduce using rule 31 (bare_key_char -> UNICODE_NUMBER .)
    UNICODE_NUMBER  reduce using rule 31 (bare_key_char -> UNICODE_NUMBER .)
    DASH            reduce using rule 31 (bare_key_char -> UNICODE_NUMBER .)
    UNDERSCORE      reduce using rule 31 (bare_key_char -> UNICODE_NUMBER .)
    DOT             reduce using rule 31 (bare_key_char -> UNICODE_NUMBER .)
    ASSIGNMENT      reduce using rule 31 (bare_key_char -> UNICODE_NUMBER .)


state 22

    (32) bare_key_char -> DASH .

    ASCII_CHAR      reduce using rule 32 (bare_key_char -> DASH .)
    ASCII_DIGIT     reduce using rule 32 (bare_key_char -> DASH .)
    UNICODE_NUMBER  reduce using rule 32 (bare_key_char -> DASH .)
    DASH            reduce using rule 32 (bare_key_char -> DASH .)
    UNDERSCORE      reduce using rule 32 (bare_key_char -> DASH .)
    DOT             reduce using rule 32 (bare_key_char -> DASH .)
    ASSIGNMENT      reduce using rule 32 (bare_key_char -> DASH .)


state 23

    (33) bare_key_char -> UNDERSCORE .

    ASCII_CHAR      reduce using rule 33 (bare_key_char -> UNDERSCORE .)
    ASCII_DIGIT     reduce using rule 33 (bare_key_char -> UNDERSCORE .)
    UNICODE_NUMBER  reduce using rule 33 (bare_key_char -> UNDERSCORE .)
    DASH            reduce using rule 33 (bare_key_char -> UNDERSCORE .)
    UNDERSCORE      reduce using rule 33 (bare_key_char -> UNDERSCORE .)
    DOT             reduce using rule 33 (bare_key_char -> UNDERSCORE .)
    ASSIGNMENT      reduce using rule 33 (bare_key_char -> UNDERSCORE .)


state 24

    (2) expression_list -> NEWLINE expression_list .

    $end            reduce using rule 2 (expression_list -> NEWLINE expression_list .)


state 25

    (3) expression_list -> expression NEWLINE . expression_list
    (2) expression_list -> . NEWLINE expression_list
    (3) expression_list -> . expression NEWLINE expression_list
    (4) expression_list -> . expression
    (5) expression -> . comment
    (6) expression -> . key_val
    (7) expression -> . key_val comment
    (8) comment -> . COMMENT_START comment_string
    (21) key_val -> . key ASSIGNMENT value
    (22) key -> . simple_key
    (23) key -> . dotted_key
    (24) simple_key -> . bare_key
    (25) simple_key -> . quoted_key
    (36) dotted_key -> . simple_key DOT simple_key
    (26) bare_key -> . bare_key_sequence
    (34) quoted_key -> . basic_string
    (35) quoted_key -> . literal_string
    (27) bare_key_sequence -> . bare_key_char
    (28) bare_key_sequence -> . bare_key_char bare_key_sequence
    (42) basic_string -> . BASIC_STR_QUOTE BASIC_STR_QUOTE
    (43) basic_string -> . BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE
    (63) literal_string -> . LITERAL_STR_QUOTE LITERAL_STR_QUOTE
    (64) literal_string -> . LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE
    (29) bare_key_char -> . ASCII_CHAR
    (30) bare_key_char -> . ASCII_DIGIT
    (31) bare_key_char -> . UNICODE_NUMBER
    (32) bare_key_char -> . DASH
    (33) bare_key_char -> . UNDERSCORE

    NEWLINE         shift and go to state 3
    COMMENT_START   shift and go to state 7
    BASIC_STR_QUOTE shift and go to state 17
    LITERAL_STR_QUOTE shift and go to state 18
    ASCII_CHAR      shift and go to state 19
    ASCII_DIGIT     shift and go to state 20
    UNICODE_NUMBER  shift and go to state 21
    DASH            shift and go to state 22
    UNDERSCORE      shift and go to state 23

    expression                     shift and go to state 4
    expression_list                shift and go to state 84
    comment                        shift and go to state 5
    key_val                        shift and go to state 6
    key                            shift and go to state 8
    simple_key                     shift and go to state 9
    dotted_key                     shift and go to state 10
    bare_key                       shift and go to state 11
    quoted_key                     shift and go to state 12
    bare_key_sequence              shift and go to state 13
    basic_string                   shift and go to state 14
    literal_string                 shift and go to state 15
    bare_key_char                  shift and go to state 16

state 26

    (7) expression -> key_val comment .

    NEWLINE         reduce using rule 7 (expression -> key_val comment .)
    $end            reduce using rule 7 (expression -> key_val comment .)


state 27

    (16) comment_char -> COMMENT_START .

    ASCII_CHAR      reduce using rule 16 (comment_char -> COMMENT_START .)
    ASCII_DIGIT     reduce using rule 16 (comment_char -> COMMENT_START .)
    UNICODE_CHAR    reduce using rule 16 (comment_char -> COMMENT_START .)
    UNICODE_NUMBER  reduce using rule 16 (comment_char -> COMMENT_START .)
    UNICODE_PUNCTUATION reduce using rule 16 (comment_char -> COMMENT_START .)
    COMMENT_START   reduce using rule 16 (comment_char -> COMMENT_START .)
    DASH            reduce using rule 16 (comment_char -> COMMENT_START .)
    UNDERSCORE      reduce using rule 16 (comment_char -> COMMENT_START .)
    WHITESPACE      reduce using rule 16 (comment_char -> COMMENT_START .)
    PLUS            reduce using rule 16 (comment_char -> COMMENT_START .)
    NEWLINE         reduce using rule 16 (comment_char -> COMMENT_START .)
    $end            reduce using rule 16 (comment_char -> COMMENT_START .)


state 28

    (8) comment -> COMMENT_START comment_string .

    NEWLINE         reduce using rule 8 (comment -> COMMENT_START comment_string .)
    $end            reduce using rule 8 (comment -> COMMENT_START comment_string .)


state 29

    (9) comment_string -> comment_char .
    (10) comment_string -> comment_char . comment_string
    (9) comment_string -> . comment_char
    (10) comment_string -> . comment_char comment_string
    (11) comment_char -> . ASCII_CHAR
    (12) comment_char -> . ASCII_DIGIT
    (13) comment_char -> . UNICODE_CHAR
    (14) comment_char -> . UNICODE_NUMBER
    (15) comment_char -> . UNICODE_PUNCTUATION
    (16) comment_char -> . COMMENT_START
    (17) comment_char -> . DASH
    (18) comment_char -> . UNDERSCORE
    (19) comment_char -> . WHITESPACE
    (20) comment_char -> . PLUS

    NEWLINE         reduce using rule 9 (comment_string -> comment_char .)
    $end            reduce using rule 9 (comment_string -> comment_char .)
    ASCII_CHAR      shift and go to state 30
    ASCII_DIGIT     shift and go to state 31
    UNICODE_CHAR    shift and go to state 32
    UNICODE_NUMBER  shift and go to state 33
    UNICODE_PUNCTUATION shift and go to state 34
    COMMENT_START   shift and go to state 27
    DASH            shift and go to state 35
    UNDERSCORE      shift and go to state 36
    WHITESPACE      shift and go to state 37
    PLUS            shift and go to state 38

    comment_char                   shift and go to state 29
    comment_string                 shift and go to state 85

state 30

    (11) comment_char -> ASCII_CHAR .

    ASCII_CHAR      reduce using rule 11 (comment_char -> ASCII_CHAR .)
    ASCII_DIGIT     reduce using rule 11 (comment_char -> ASCII_CHAR .)
    UNICODE_CHAR    reduce using rule 11 (comment_char -> ASCII_CHAR .)
    UNICODE_NUMBER  reduce using rule 11 (comment_char -> ASCII_CHAR .)
    UNICODE_PUNCTUATION reduce using rule 11 (comment_char -> ASCII_CHAR .)
    COMMENT_START   reduce using rule 11 (comment_char -> ASCII_CHAR .)
    DASH            reduce using rule 11 (comment_char -> ASCII_CHAR .)
    UNDERSCORE      reduce using rule 11 (comment_char -> ASCII_CHAR .)
    WHITESPACE      reduce using rule 11 (comment_char -> ASCII_CHAR .)
    PLUS            reduce using rule 11 (comment_char -> ASCII_CHAR .)
    NEWLINE         reduce using rule 11 (comment_char -> ASCII_CHAR .)
    $end            reduce using rule 11 (comment_char -> ASCII_CHAR .)


state 31

    (12) comment_char -> ASCII_DIGIT .

    ASCII_CHAR      reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    ASCII_DIGIT     reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    UNICODE_CHAR    reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    UNICODE_NUMBER  reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    UNICODE_PUNCTUATION reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    COMMENT_START   reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    DASH            reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    UNDERSCORE      reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    WHITESPACE      reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    PLUS            reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    NEWLINE         reduce using rule 12 (comment_char -> ASCII_DIGIT .)
    $end            reduce using rule 12 (comment_char -> ASCII_DIGIT .)


state 32

    (13) comment_char -> UNICODE_CHAR .

    ASCII_CHAR      reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    ASCII_DIGIT     reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    UNICODE_CHAR    reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    UNICODE_NUMBER  reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    UNICODE_PUNCTUATION reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    COMMENT_START   reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    DASH            reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    UNDERSCORE      reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    WHITESPACE      reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    PLUS            reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    NEWLINE         reduce using rule 13 (comment_char -> UNICODE_CHAR .)
    $end            reduce using rule 13 (comment_char -> UNICODE_CHAR .)


state 33

    (14) comment_char -> UNICODE_NUMBER .

    ASCII_CHAR      reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    ASCII_DIGIT     reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    UNICODE_CHAR    reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    UNICODE_NUMBER  reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    UNICODE_PUNCTUATION reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    COMMENT_START   reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    DASH            reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    UNDERSCORE      reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    WHITESPACE      reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    PLUS            reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    NEWLINE         reduce using rule 14 (comment_char -> UNICODE_NUMBER .)
    $end            reduce using rule 14 (comment_char -> UNICODE_NUMBER .)


state 34

    (15) comment_char -> UNICODE_PUNCTUATION .

    ASCII_CHAR      reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    ASCII_DIGIT     reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    UNICODE_CHAR    reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    UNICODE_NUMBER  reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    UNICODE_PUNCTUATION reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    COMMENT_START   reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    DASH            reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    UNDERSCORE      reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    WHITESPACE      reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    PLUS            reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    NEWLINE         reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)
    $end            reduce using rule 15 (comment_char -> UNICODE_PUNCTUATION .)


state 35

    (17) comment_char -> DASH .

    ASCII_CHAR      reduce using rule 17 (comment_char -> DASH .)
    ASCII_DIGIT     reduce using rule 17 (comment_char -> DASH .)
    UNICODE_CHAR    reduce using rule 17 (comment_char -> DASH .)
    UNICODE_NUMBER  reduce using rule 17 (comment_char -> DASH .)
    UNICODE_PUNCTUATION reduce using rule 17 (comment_char -> DASH .)
    COMMENT_START   reduce using rule 17 (comment_char -> DASH .)
    DASH            reduce using rule 17 (comment_char -> DASH .)
    UNDERSCORE      reduce using rule 17 (comment_char -> DASH .)
    WHITESPACE      reduce using rule 17 (comment_char -> DASH .)
    PLUS            reduce using rule 17 (comment_char -> DASH .)
    NEWLINE         reduce using rule 17 (comment_char -> DASH .)
    $end            reduce using rule 17 (comment_char -> DASH .)


state 36

    (18) comment_char -> UNDERSCORE .

    ASCII_CHAR      reduce using rule 18 (comment_char -> UNDERSCORE .)
    ASCII_DIGIT     reduce using rule 18 (comment_char -> UNDERSCORE .)
    UNICODE_CHAR    reduce using rule 18 (comment_char -> UNDERSCORE .)
    UNICODE_NUMBER  reduce using rule 18 (comment_char -> UNDERSCORE .)
    UNICODE_PUNCTUATION reduce using rule 18 (comment_char -> UNDERSCORE .)
    COMMENT_START   reduce using rule 18 (comment_char -> UNDERSCORE .)
    DASH            reduce using rule 18 (comment_char -> UNDERSCORE .)
    UNDERSCORE      reduce using rule 18 (comment_char -> UNDERSCORE .)
    WHITESPACE      reduce using rule 18 (comment_char -> UNDERSCORE .)
    PLUS            reduce using rule 18 (comment_char -> UNDERSCORE .)
    NEWLINE         reduce using rule 18 (comment_char -> UNDERSCORE .)
    $end            reduce using rule 18 (comment_char -> UNDERSCORE .)


state 37

    (19) comment_char -> WHITESPACE .

    ASCII_CHAR      reduce using rule 19 (comment_char -> WHITESPACE .)
    ASCII_DIGIT     reduce using rule 19 (comment_char -> WHITESPACE .)
    UNICODE_CHAR    reduce using rule 19 (comment_char -> WHITESPACE .)
    UNICODE_NUMBER  reduce using rule 19 (comment_char -> WHITESPACE .)
    UNICODE_PUNCTUATION reduce using rule 19 (comment_char -> WHITESPACE .)
    COMMENT_START   reduce using rule 19 (comment_char -> WHITESPACE .)
    DASH            reduce using rule 19 (comment_char -> WHITESPACE .)
    UNDERSCORE      reduce using rule 19 (comment_char -> WHITESPACE .)
    WHITESPACE      reduce using rule 19 (comment_char -> WHITESPACE .)
    PLUS            reduce using rule 19 (comment_char -> WHITESPACE .)
    NEWLINE         reduce using rule 19 (comment_char -> WHITESPACE .)
    $end            reduce using rule 19 (comment_char -> WHITESPACE .)


state 38

    (20) comment_char -> PLUS .

    ASCII_CHAR      reduce using rule 20 (comment_char -> PLUS .)
    ASCII_DIGIT     reduce using rule 20 (comment_char -> PLUS .)
    UNICODE_CHAR    reduce using rule 20 (comment_char -> PLUS .)
    UNICODE_NUMBER  reduce using rule 20 (comment_char -> PLUS .)
    UNICODE_PUNCTUATION reduce using rule 20 (comment_char -> PLUS .)
    COMMENT_START   reduce using rule 20 (comment_char -> PLUS .)
    DASH            reduce using rule 20 (comment_char -> PLUS .)
    UNDERSCORE      reduce using rule 20 (comment_char -> PLUS .)
    WHITESPACE      reduce using rule 20 (comment_char -> PLUS .)
    PLUS            reduce using rule 20 (comment_char -> PLUS .)
    NEWLINE         reduce using rule 20 (comment_char -> PLUS .)
    $end            reduce using rule 20 (comment_char -> PLUS .)


state 39

    (21) key_val -> key ASSIGNMENT . value
    (37) value -> . basic_string
    (38) value -> . literal_string
    (39) value -> . integer
    (40) value -> . float
    (41) value -> . boolean
    (42) basic_string -> . BASIC_STR_QUOTE BASIC_STR_QUOTE
    (43) basic_string -> . BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE
    (63) literal_string -> . LITERAL_STR_QUOTE LITERAL_STR_QUOTE
    (64) literal_string -> . LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE
    (90) integer -> . dec_int
    (97) float -> . dec_float
    (102) boolean -> . true
    (103) boolean -> . false
    (91) dec_int -> . dec_int_sequence
    (92) dec_int -> . PLUS dec_int_sequence
    (93) dec_int -> . DASH dec_int_sequence
    (98) dec_float -> . integer DOT integer
    (99) dec_float -> . integer DOT integer exponent
    (100) dec_float -> . integer exponent
    (104) true -> . ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR
    (105) false -> . ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR
    (94) dec_int_sequence -> . dec_int_char
    (95) dec_int_sequence -> . dec_int_char dec_int_sequence
    (96) dec_int_char -> . ASCII_DIGIT

    BASIC_STR_QUOTE shift and go to state 17
    LITERAL_STR_QUOTE shift and go to state 18
    PLUS            shift and go to state 97
    DASH            shift and go to state 98
    ASCII_CHAR      shift and go to state 99
    ASCII_DIGIT     shift and go to state 101

    value                          shift and go to state 86
    basic_string                   shift and go to state 87
    literal_string                 shift and go to state 88
    integer                        shift and go to state 89
    float                          shift and go to state 90
    boolean                        shift and go to state 91
    dec_int                        shift and go to state 92
    dec_float                      shift and go to state 93
    true                           shift and go to state 94
    false                          shift and go to state 95
    dec_int_sequence               shift and go to state 96
    dec_int_char                   shift and go to state 100

state 40

    (36) dotted_key -> simple_key DOT . simple_key
    (24) simple_key -> . bare_key
    (25) simple_key -> . quoted_key
    (26) bare_key -> . bare_key_sequence
    (34) quoted_key -> . basic_string
    (35) quoted_key -> . literal_string
    (27) bare_key_sequence -> . bare_key_char
    (28) bare_key_sequence -> . bare_key_char bare_key_sequence
    (42) basic_string -> . BASIC_STR_QUOTE BASIC_STR_QUOTE
    (43) basic_string -> . BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE
    (63) literal_string -> . LITERAL_STR_QUOTE LITERAL_STR_QUOTE
    (64) literal_string -> . LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE
    (29) bare_key_char -> . ASCII_CHAR
    (30) bare_key_char -> . ASCII_DIGIT
    (31) bare_key_char -> . UNICODE_NUMBER
    (32) bare_key_char -> . DASH
    (33) bare_key_char -> . UNDERSCORE

    BASIC_STR_QUOTE shift and go to state 17
    LITERAL_STR_QUOTE shift and go to state 18
    ASCII_CHAR      shift and go to state 19
    ASCII_DIGIT     shift and go to state 20
    UNICODE_NUMBER  shift and go to state 21
    DASH            shift and go to state 22
    UNDERSCORE      shift and go to state 23

    simple_key                     shift and go to state 102
    bare_key                       shift and go to state 11
    quoted_key                     shift and go to state 12
    bare_key_sequence              shift and go to state 13
    basic_string                   shift and go to state 14
    literal_string                 shift and go to state 15
    bare_key_char                  shift and go to state 16

state 41

    (28) bare_key_sequence -> bare_key_char bare_key_sequence .

    DOT             reduce using rule 28 (bare_key_sequence -> bare_key_char bare_key_sequence .)
    ASSIGNMENT      reduce using rule 28 (bare_key_sequence -> bare_key_char bare_key_sequence .)


state 42

    (42) basic_string -> BASIC_STR_QUOTE BASIC_STR_QUOTE .

    DOT             reduce using rule 42 (basic_string -> BASIC_STR_QUOTE BASIC_STR_QUOTE .)
    ASSIGNMENT      reduce using rule 42 (basic_string -> BASIC_STR_QUOTE BASIC_STR_QUOTE .)
    COMMENT_START   reduce using rule 42 (basic_string -> BASIC_STR_QUOTE BASIC_STR_QUOTE .)
    NEWLINE         reduce using rule 42 (basic_string -> BASIC_STR_QUOTE BASIC_STR_QUOTE .)
    $end            reduce using rule 42 (basic_string -> BASIC_STR_QUOTE BASIC_STR_QUOTE .)


state 43

    (43) basic_string -> BASIC_STR_QUOTE basic_string_sequence . BASIC_STR_QUOTE

    BASIC_STR_QUOTE shift and go to state 103


state 44

    (44) basic_string_sequence -> basic_string_char .
    (45) basic_string_sequence -> basic_string_char . basic_string_sequence
    (44) basic_string_sequence -> . basic_string_char
    (45) basic_string_sequence -> . basic_string_char basic_string_sequence
    (46) basic_string_char -> . ASCII_CHAR
    (47) basic_string_char -> . ASCII_DIGIT
    (48) basic_string_char -> . UNICODE_CHAR
    (49) basic_string_char -> . UNICODE_NUMBER
    (50) basic_string_char -> . UNICODE_PUNCTUATION
    (51) basic_string_char -> . UNICODE_CONTROL
    (52) basic_string_char -> . UNICODE_SYMBOL
    (53) basic_string_char -> . UNICODE_SEPARATOR
    (54) basic_string_char -> . UNICODE_PRIVATE_USE
    (55) basic_string_char -> . LITERAL_STR_QUOTE
    (56) basic_string_char -> . DASH
    (57) basic_string_char -> . UNDERSCORE
    (58) basic_string_char -> . WHITESPACE
    (59) basic_string_char -> . DOT
    (60) basic_string_char -> . COMMENT_START
    (61) basic_string_char -> . PLUS
    (62) basic_string_char -> . escape
    (85) escape -> . REVERSE_SOLIDUS escape_char

    BASIC_STR_QUOTE reduce using rule 44 (basic_string_sequence -> basic_string_char .)
    ASCII_CHAR      shift and go to state 45
    ASCII_DIGIT     shift and go to state 46
    UNICODE_CHAR    shift and go to state 47
    UNICODE_NUMBER  shift and go to state 48
    UNICODE_PUNCTUATION shift and go to state 49
    UNICODE_CONTROL shift and go to state 50
    UNICODE_SYMBOL  shift and go to state 51
    UNICODE_SEPARATOR shift and go to state 52
    UNICODE_PRIVATE_USE shift and go to state 53
    LITERAL_STR_QUOTE shift and go to state 54
    DASH            shift and go to state 55
    UNDERSCORE      shift and go to state 56
    WHITESPACE      shift and go to state 57
    DOT             shift and go to state 58
    COMMENT_START   shift and go to state 59
    PLUS            shift and go to state 60
    REVERSE_SOLIDUS shift and go to state 62

    basic_string_char              shift and go to state 44
    basic_string_sequence          shift and go to state 104
    escape                         shift and go to state 61

state 45

    (46) basic_string_char -> ASCII_CHAR .

    ASCII_CHAR      reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    ASCII_DIGIT     reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    UNICODE_CHAR    reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    UNICODE_NUMBER  reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    UNICODE_PUNCTUATION reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    UNICODE_CONTROL reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    UNICODE_SYMBOL  reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    UNICODE_SEPARATOR reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    UNICODE_PRIVATE_USE reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    LITERAL_STR_QUOTE reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    DASH            reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    UNDERSCORE      reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    WHITESPACE      reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    DOT             reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    COMMENT_START   reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    PLUS            reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    REVERSE_SOLIDUS reduce using rule 46 (basic_string_char -> ASCII_CHAR .)
    BASIC_STR_QUOTE reduce using rule 46 (basic_string_char -> ASCII_CHAR .)


state 46

    (47) basic_string_char -> ASCII_DIGIT .

    ASCII_CHAR      reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    ASCII_DIGIT     reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    UNICODE_CHAR    reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    UNICODE_NUMBER  reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    UNICODE_PUNCTUATION reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    UNICODE_CONTROL reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    UNICODE_SYMBOL  reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    UNICODE_SEPARATOR reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    UNICODE_PRIVATE_USE reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    LITERAL_STR_QUOTE reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    DASH            reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    UNDERSCORE      reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    WHITESPACE      reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    DOT             reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    COMMENT_START   reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    PLUS            reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    REVERSE_SOLIDUS reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)
    BASIC_STR_QUOTE reduce using rule 47 (basic_string_char -> ASCII_DIGIT .)


state 47

    (48) basic_string_char -> UNICODE_CHAR .

    ASCII_CHAR      reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    ASCII_DIGIT     reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    UNICODE_CHAR    reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    UNICODE_NUMBER  reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    UNICODE_PUNCTUATION reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    UNICODE_CONTROL reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    UNICODE_SYMBOL  reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    UNICODE_SEPARATOR reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    UNICODE_PRIVATE_USE reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    LITERAL_STR_QUOTE reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    DASH            reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    UNDERSCORE      reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    WHITESPACE      reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    DOT             reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    COMMENT_START   reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    PLUS            reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    REVERSE_SOLIDUS reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)
    BASIC_STR_QUOTE reduce using rule 48 (basic_string_char -> UNICODE_CHAR .)


state 48

    (49) basic_string_char -> UNICODE_NUMBER .

    ASCII_CHAR      reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    ASCII_DIGIT     reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    UNICODE_CHAR    reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    UNICODE_NUMBER  reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    UNICODE_PUNCTUATION reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    UNICODE_CONTROL reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    UNICODE_SYMBOL  reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    UNICODE_SEPARATOR reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    UNICODE_PRIVATE_USE reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    LITERAL_STR_QUOTE reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    DASH            reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    UNDERSCORE      reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    WHITESPACE      reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    DOT             reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    COMMENT_START   reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    PLUS            reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    REVERSE_SOLIDUS reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)
    BASIC_STR_QUOTE reduce using rule 49 (basic_string_char -> UNICODE_NUMBER .)


state 49

    (50) basic_string_char -> UNICODE_PUNCTUATION .

    ASCII_CHAR      reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    ASCII_DIGIT     reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_CHAR    reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_NUMBER  reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_PUNCTUATION reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_CONTROL reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_SYMBOL  reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_SEPARATOR reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_PRIVATE_USE reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    LITERAL_STR_QUOTE reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    DASH            reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    UNDERSCORE      reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    WHITESPACE      reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    DOT             reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    COMMENT_START   reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    PLUS            reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    REVERSE_SOLIDUS reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)
    BASIC_STR_QUOTE reduce using rule 50 (basic_string_char -> UNICODE_PUNCTUATION .)


state 50

    (51) basic_string_char -> UNICODE_CONTROL .

    ASCII_CHAR      reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    ASCII_DIGIT     reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    UNICODE_CHAR    reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    UNICODE_NUMBER  reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    UNICODE_PUNCTUATION reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    UNICODE_CONTROL reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    UNICODE_SYMBOL  reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    UNICODE_SEPARATOR reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    UNICODE_PRIVATE_USE reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    LITERAL_STR_QUOTE reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    DASH            reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    UNDERSCORE      reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    WHITESPACE      reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    DOT             reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    COMMENT_START   reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    PLUS            reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    REVERSE_SOLIDUS reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)
    BASIC_STR_QUOTE reduce using rule 51 (basic_string_char -> UNICODE_CONTROL .)


state 51

    (52) basic_string_char -> UNICODE_SYMBOL .

    ASCII_CHAR      reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    ASCII_DIGIT     reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    UNICODE_CHAR    reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    UNICODE_NUMBER  reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    UNICODE_PUNCTUATION reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    UNICODE_CONTROL reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    UNICODE_SYMBOL  reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    UNICODE_SEPARATOR reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    UNICODE_PRIVATE_USE reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    LITERAL_STR_QUOTE reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    DASH            reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    UNDERSCORE      reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    WHITESPACE      reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    DOT             reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    COMMENT_START   reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    PLUS            reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    REVERSE_SOLIDUS reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)
    BASIC_STR_QUOTE reduce using rule 52 (basic_string_char -> UNICODE_SYMBOL .)


state 52

    (53) basic_string_char -> UNICODE_SEPARATOR .

    ASCII_CHAR      reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    ASCII_DIGIT     reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    UNICODE_CHAR    reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    UNICODE_NUMBER  reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    UNICODE_PUNCTUATION reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    UNICODE_CONTROL reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    UNICODE_SYMBOL  reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    UNICODE_SEPARATOR reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    UNICODE_PRIVATE_USE reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    LITERAL_STR_QUOTE reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    DASH            reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    UNDERSCORE      reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    WHITESPACE      reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    DOT             reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    COMMENT_START   reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    PLUS            reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    REVERSE_SOLIDUS reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)
    BASIC_STR_QUOTE reduce using rule 53 (basic_string_char -> UNICODE_SEPARATOR .)


state 53

    (54) basic_string_char -> UNICODE_PRIVATE_USE .

    ASCII_CHAR      reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    ASCII_DIGIT     reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_CHAR    reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_NUMBER  reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_PUNCTUATION reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_CONTROL reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_SYMBOL  reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_SEPARATOR reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_PRIVATE_USE reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    LITERAL_STR_QUOTE reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    DASH            reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    UNDERSCORE      reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    WHITESPACE      reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    DOT             reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    COMMENT_START   reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    PLUS            reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    REVERSE_SOLIDUS reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)
    BASIC_STR_QUOTE reduce using rule 54 (basic_string_char -> UNICODE_PRIVATE_USE .)


state 54

    (55) basic_string_char -> LITERAL_STR_QUOTE .

    ASCII_CHAR      reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    ASCII_DIGIT     reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    UNICODE_CHAR    reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    UNICODE_NUMBER  reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    UNICODE_PUNCTUATION reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    UNICODE_CONTROL reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    UNICODE_SYMBOL  reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    UNICODE_SEPARATOR reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    UNICODE_PRIVATE_USE reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    LITERAL_STR_QUOTE reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    DASH            reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    UNDERSCORE      reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    WHITESPACE      reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    DOT             reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    COMMENT_START   reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    PLUS            reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    REVERSE_SOLIDUS reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)
    BASIC_STR_QUOTE reduce using rule 55 (basic_string_char -> LITERAL_STR_QUOTE .)


state 55

    (56) basic_string_char -> DASH .

    ASCII_CHAR      reduce using rule 56 (basic_string_char -> DASH .)
    ASCII_DIGIT     reduce using rule 56 (basic_string_char -> DASH .)
    UNICODE_CHAR    reduce using rule 56 (basic_string_char -> DASH .)
    UNICODE_NUMBER  reduce using rule 56 (basic_string_char -> DASH .)
    UNICODE_PUNCTUATION reduce using rule 56 (basic_string_char -> DASH .)
    UNICODE_CONTROL reduce using rule 56 (basic_string_char -> DASH .)
    UNICODE_SYMBOL  reduce using rule 56 (basic_string_char -> DASH .)
    UNICODE_SEPARATOR reduce using rule 56 (basic_string_char -> DASH .)
    UNICODE_PRIVATE_USE reduce using rule 56 (basic_string_char -> DASH .)
    LITERAL_STR_QUOTE reduce using rule 56 (basic_string_char -> DASH .)
    DASH            reduce using rule 56 (basic_string_char -> DASH .)
    UNDERSCORE      reduce using rule 56 (basic_string_char -> DASH .)
    WHITESPACE      reduce using rule 56 (basic_string_char -> DASH .)
    DOT             reduce using rule 56 (basic_string_char -> DASH .)
    COMMENT_START   reduce using rule 56 (basic_string_char -> DASH .)
    PLUS            reduce using rule 56 (basic_string_char -> DASH .)
    REVERSE_SOLIDUS reduce using rule 56 (basic_string_char -> DASH .)
    BASIC_STR_QUOTE reduce using rule 56 (basic_string_char -> DASH .)


state 56

    (57) basic_string_char -> UNDERSCORE .

    ASCII_CHAR      reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    ASCII_DIGIT     reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    UNICODE_CHAR    reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    UNICODE_NUMBER  reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    UNICODE_PUNCTUATION reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    UNICODE_CONTROL reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    UNICODE_SYMBOL  reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    UNICODE_SEPARATOR reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    UNICODE_PRIVATE_USE reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    LITERAL_STR_QUOTE reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    DASH            reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    UNDERSCORE      reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    WHITESPACE      reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    DOT             reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    COMMENT_START   reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    PLUS            reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    REVERSE_SOLIDUS reduce using rule 57 (basic_string_char -> UNDERSCORE .)
    BASIC_STR_QUOTE reduce using rule 57 (basic_string_char -> UNDERSCORE .)


state 57

    (58) basic_string_char -> WHITESPACE .

    ASCII_CHAR      reduce using rule 58 (basic_string_char -> WHITESPACE .)
    ASCII_DIGIT     reduce using rule 58 (basic_string_char -> WHITESPACE .)
    UNICODE_CHAR    reduce using rule 58 (basic_string_char -> WHITESPACE .)
    UNICODE_NUMBER  reduce using rule 58 (basic_string_char -> WHITESPACE .)
    UNICODE_PUNCTUATION reduce using rule 58 (basic_string_char -> WHITESPACE .)
    UNICODE_CONTROL reduce using rule 58 (basic_string_char -> WHITESPACE .)
    UNICODE_SYMBOL  reduce using rule 58 (basic_string_char -> WHITESPACE .)
    UNICODE_SEPARATOR reduce using rule 58 (basic_string_char -> WHITESPACE .)
    UNICODE_PRIVATE_USE reduce using rule 58 (basic_string_char -> WHITESPACE .)
    LITERAL_STR_QUOTE reduce using rule 58 (basic_string_char -> WHITESPACE .)
    DASH            reduce using rule 58 (basic_string_char -> WHITESPACE .)
    UNDERSCORE      reduce using rule 58 (basic_string_char -> WHITESPACE .)
    WHITESPACE      reduce using rule 58 (basic_string_char -> WHITESPACE .)
    DOT             reduce using rule 58 (basic_string_char -> WHITESPACE .)
    COMMENT_START   reduce using rule 58 (basic_string_char -> WHITESPACE .)
    PLUS            reduce using rule 58 (basic_string_char -> WHITESPACE .)
    REVERSE_SOLIDUS reduce using rule 58 (basic_string_char -> WHITESPACE .)
    BASIC_STR_QUOTE reduce using rule 58 (basic_string_char -> WHITESPACE .)


state 58

    (59) basic_string_char -> DOT .

    ASCII_CHAR      reduce using rule 59 (basic_string_char -> DOT .)
    ASCII_DIGIT     reduce using rule 59 (basic_string_char -> DOT .)
    UNICODE_CHAR    reduce using rule 59 (basic_string_char -> DOT .)
    UNICODE_NUMBER  reduce using rule 59 (basic_string_char -> DOT .)
    UNICODE_PUNCTUATION reduce using rule 59 (basic_string_char -> DOT .)
    UNICODE_CONTROL reduce using rule 59 (basic_string_char -> DOT .)
    UNICODE_SYMBOL  reduce using rule 59 (basic_string_char -> DOT .)
    UNICODE_SEPARATOR reduce using rule 59 (basic_string_char -> DOT .)
    UNICODE_PRIVATE_USE reduce using rule 59 (basic_string_char -> DOT .)
    LITERAL_STR_QUOTE reduce using rule 59 (basic_string_char -> DOT .)
    DASH            reduce using rule 59 (basic_string_char -> DOT .)
    UNDERSCORE      reduce using rule 59 (basic_string_char -> DOT .)
    WHITESPACE      reduce using rule 59 (basic_string_char -> DOT .)
    DOT             reduce using rule 59 (basic_string_char -> DOT .)
    COMMENT_START   reduce using rule 59 (basic_string_char -> DOT .)
    PLUS            reduce using rule 59 (basic_string_char -> DOT .)
    REVERSE_SOLIDUS reduce using rule 59 (basic_string_char -> DOT .)
    BASIC_STR_QUOTE reduce using rule 59 (basic_string_char -> DOT .)


state 59

    (60) basic_string_char -> COMMENT_START .

    ASCII_CHAR      reduce using rule 60 (basic_string_char -> COMMENT_START .)
    ASCII_DIGIT     reduce using rule 60 (basic_string_char -> COMMENT_START .)
    UNICODE_CHAR    reduce using rule 60 (basic_string_char -> COMMENT_START .)
    UNICODE_NUMBER  reduce using rule 60 (basic_string_char -> COMMENT_START .)
    UNICODE_PUNCTUATION reduce using rule 60 (basic_string_char -> COMMENT_START .)
    UNICODE_CONTROL reduce using rule 60 (basic_string_char -> COMMENT_START .)
    UNICODE_SYMBOL  reduce using rule 60 (basic_string_char -> COMMENT_START .)
    UNICODE_SEPARATOR reduce using rule 60 (basic_string_char -> COMMENT_START .)
    UNICODE_PRIVATE_USE reduce using rule 60 (basic_string_char -> COMMENT_START .)
    LITERAL_STR_QUOTE reduce using rule 60 (basic_string_char -> COMMENT_START .)
    DASH            reduce using rule 60 (basic_string_char -> COMMENT_START .)
    UNDERSCORE      reduce using rule 60 (basic_string_char -> COMMENT_START .)
    WHITESPACE      reduce using rule 60 (basic_string_char -> COMMENT_START .)
    DOT             reduce using rule 60 (basic_string_char -> COMMENT_START .)
    COMMENT_START   reduce using rule 60 (basic_string_char -> COMMENT_START .)
    PLUS            reduce using rule 60 (basic_string_char -> COMMENT_START .)
    REVERSE_SOLIDUS reduce using rule 60 (basic_string_char -> COMMENT_START .)
    BASIC_STR_QUOTE reduce using rule 60 (basic_string_char -> COMMENT_START .)


state 60

    (61) basic_string_char -> PLUS .

    ASCII_CHAR      reduce using rule 61 (basic_string_char -> PLUS .)
    ASCII_DIGIT     reduce using rule 61 (basic_string_char -> PLUS .)
    UNICODE_CHAR    reduce using rule 61 (basic_string_char -> PLUS .)
    UNICODE_NUMBER  reduce using rule 61 (basic_string_char -> PLUS .)
    UNICODE_PUNCTUATION reduce using rule 61 (basic_string_char -> PLUS .)
    UNICODE_CONTROL reduce using rule 61 (basic_string_char -> PLUS .)
    UNICODE_SYMBOL  reduce using rule 61 (basic_string_char -> PLUS .)
    UNICODE_SEPARATOR reduce using rule 61 (basic_string_char -> PLUS .)
    UNICODE_PRIVATE_USE reduce using rule 61 (basic_string_char -> PLUS .)
    LITERAL_STR_QUOTE reduce using rule 61 (basic_string_char -> PLUS .)
    DASH            reduce using rule 61 (basic_string_char -> PLUS .)
    UNDERSCORE      reduce using rule 61 (basic_string_char -> PLUS .)
    WHITESPACE      reduce using rule 61 (basic_string_char -> PLUS .)
    DOT             reduce using rule 61 (basic_string_char -> PLUS .)
    COMMENT_START   reduce using rule 61 (basic_string_char -> PLUS .)
    PLUS            reduce using rule 61 (basic_string_char -> PLUS .)
    REVERSE_SOLIDUS reduce using rule 61 (basic_string_char -> PLUS .)
    BASIC_STR_QUOTE reduce using rule 61 (basic_string_char -> PLUS .)


state 61

    (62) basic_string_char -> escape .

    ASCII_CHAR      reduce using rule 62 (basic_string_char -> escape .)
    ASCII_DIGIT     reduce using rule 62 (basic_string_char -> escape .)
    UNICODE_CHAR    reduce using rule 62 (basic_string_char -> escape .)
    UNICODE_NUMBER  reduce using rule 62 (basic_string_char -> escape .)
    UNICODE_PUNCTUATION reduce using rule 62 (basic_string_char -> escape .)
    UNICODE_CONTROL reduce using rule 62 (basic_string_char -> escape .)
    UNICODE_SYMBOL  reduce using rule 62 (basic_string_char -> escape .)
    UNICODE_SEPARATOR reduce using rule 62 (basic_string_char -> escape .)
    UNICODE_PRIVATE_USE reduce using rule 62 (basic_string_char -> escape .)
    LITERAL_STR_QUOTE reduce using rule 62 (basic_string_char -> escape .)
    DASH            reduce using rule 62 (basic_string_char -> escape .)
    UNDERSCORE      reduce using rule 62 (basic_string_char -> escape .)
    WHITESPACE      reduce using rule 62 (basic_string_char -> escape .)
    DOT             reduce using rule 62 (basic_string_char -> escape .)
    COMMENT_START   reduce using rule 62 (basic_string_char -> escape .)
    PLUS            reduce using rule 62 (basic_string_char -> escape .)
    REVERSE_SOLIDUS reduce using rule 62 (basic_string_char -> escape .)
    BASIC_STR_QUOTE reduce using rule 62 (basic_string_char -> escape .)


state 62

    (85) escape -> REVERSE_SOLIDUS . escape_char
    (86) escape_char -> . LITERAL_STR_QUOTE
    (87) escape_char -> . BASIC_STR_QUOTE
    (88) escape_char -> . REVERSE_SOLIDUS
    (89) escape_char -> . ASCII_CHAR

    LITERAL_STR_QUOTE shift and go to state 107
    BASIC_STR_QUOTE shift and go to state 108
    REVERSE_SOLIDUS shift and go to state 105
    ASCII_CHAR      shift and go to state 109

    escape_char                    shift and go to state 106

state 63

    (63) literal_string -> LITERAL_STR_QUOTE LITERAL_STR_QUOTE .

    DOT             reduce using rule 63 (literal_string -> LITERAL_STR_QUOTE LITERAL_STR_QUOTE .)
    ASSIGNMENT      reduce using rule 63 (literal_string -> LITERAL_STR_QUOTE LITERAL_STR_QUOTE .)
    COMMENT_START   reduce using rule 63 (literal_string -> LITERAL_STR_QUOTE LITERAL_STR_QUOTE .)
    NEWLINE         reduce using rule 63 (literal_string -> LITERAL_STR_QUOTE LITERAL_STR_QUOTE .)
    $end            reduce using rule 63 (literal_string -> LITERAL_STR_QUOTE LITERAL_STR_QUOTE .)


state 64

    (64) literal_string -> LITERAL_STR_QUOTE literal_string_sequence . LITERAL_STR_QUOTE

    LITERAL_STR_QUOTE shift and go to state 110


state 65

    (65) literal_string_sequence -> literal_string_char .
    (66) literal_string_sequence -> literal_string_char . literal_string_sequence
    (65) literal_string_sequence -> . literal_string_char
    (66) literal_string_sequence -> . literal_string_char literal_string_sequence
    (67) literal_string_char -> . ASCII_CHAR
    (68) literal_string_char -> . ASCII_DIGIT
    (69) literal_string_char -> . UNICODE_CHAR
    (70) literal_string_char -> . UNICODE_NUMBER
    (71) literal_string_char -> . UNICODE_PUNCTUATION
    (72) literal_string_char -> . UNICODE_CONTROL
    (73) literal_string_char -> . UNICODE_SYMBOL
    (74) literal_string_char -> . UNICODE_SEPARATOR
    (75) literal_string_char -> . UNICODE_PRIVATE_USE
    (76) literal_string_char -> . BASIC_STR_QUOTE
    (77) literal_string_char -> . DASH
    (78) literal_string_char -> . UNDERSCORE
    (79) literal_string_char -> . WHITESPACE
    (80) literal_string_char -> . DOT
    (81) literal_string_char -> . COMMENT_START
    (82) literal_string_char -> . REVERSE_SOLIDUS
    (83) literal_string_char -> . PLUS
    (84) literal_string_char -> . MINUS

    LITERAL_STR_QUOTE reduce using rule 65 (literal_string_sequence -> literal_string_char .)
    ASCII_CHAR      shift and go to state 66
    ASCII_DIGIT     shift and go to state 67
    UNICODE_CHAR    shift and go to state 68
    UNICODE_NUMBER  shift and go to state 69
    UNICODE_PUNCTUATION shift and go to state 70
    UNICODE_CONTROL shift and go to state 71
    UNICODE_SYMBOL  shift and go to state 72
    UNICODE_SEPARATOR shift and go to state 73
    UNICODE_PRIVATE_USE shift and go to state 74
    BASIC_STR_QUOTE shift and go to state 75
    DASH            shift and go to state 76
    UNDERSCORE      shift and go to state 77
    WHITESPACE      shift and go to state 78
    DOT             shift and go to state 79
    COMMENT_START   shift and go to state 80
    REVERSE_SOLIDUS shift and go to state 81
    PLUS            shift and go to state 82
    MINUS           shift and go to state 83

    literal_string_char            shift and go to state 65
    literal_string_sequence        shift and go to state 111

state 66

    (67) literal_string_char -> ASCII_CHAR .

    ASCII_CHAR      reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    ASCII_DIGIT     reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    UNICODE_CHAR    reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    UNICODE_NUMBER  reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    UNICODE_PUNCTUATION reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    UNICODE_CONTROL reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    UNICODE_SYMBOL  reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    UNICODE_SEPARATOR reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    UNICODE_PRIVATE_USE reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    BASIC_STR_QUOTE reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    DASH            reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    UNDERSCORE      reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    WHITESPACE      reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    DOT             reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    COMMENT_START   reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    REVERSE_SOLIDUS reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    PLUS            reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    MINUS           reduce using rule 67 (literal_string_char -> ASCII_CHAR .)
    LITERAL_STR_QUOTE reduce using rule 67 (literal_string_char -> ASCII_CHAR .)


state 67

    (68) literal_string_char -> ASCII_DIGIT .

    ASCII_CHAR      reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    ASCII_DIGIT     reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    UNICODE_CHAR    reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    UNICODE_NUMBER  reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    UNICODE_PUNCTUATION reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    UNICODE_CONTROL reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    UNICODE_SYMBOL  reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    UNICODE_SEPARATOR reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    UNICODE_PRIVATE_USE reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    BASIC_STR_QUOTE reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    DASH            reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    UNDERSCORE      reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    WHITESPACE      reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    DOT             reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    COMMENT_START   reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    REVERSE_SOLIDUS reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    PLUS            reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    MINUS           reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)
    LITERAL_STR_QUOTE reduce using rule 68 (literal_string_char -> ASCII_DIGIT .)


state 68

    (69) literal_string_char -> UNICODE_CHAR .

    ASCII_CHAR      reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    ASCII_DIGIT     reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    UNICODE_CHAR    reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    UNICODE_NUMBER  reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    UNICODE_PUNCTUATION reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    UNICODE_CONTROL reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    UNICODE_SYMBOL  reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    UNICODE_SEPARATOR reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    UNICODE_PRIVATE_USE reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    BASIC_STR_QUOTE reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    DASH            reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    UNDERSCORE      reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    WHITESPACE      reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    DOT             reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    COMMENT_START   reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    REVERSE_SOLIDUS reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    PLUS            reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    MINUS           reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)
    LITERAL_STR_QUOTE reduce using rule 69 (literal_string_char -> UNICODE_CHAR .)


state 69

    (70) literal_string_char -> UNICODE_NUMBER .

    ASCII_CHAR      reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    ASCII_DIGIT     reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    UNICODE_CHAR    reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    UNICODE_NUMBER  reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    UNICODE_PUNCTUATION reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    UNICODE_CONTROL reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    UNICODE_SYMBOL  reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    UNICODE_SEPARATOR reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    UNICODE_PRIVATE_USE reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    BASIC_STR_QUOTE reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    DASH            reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    UNDERSCORE      reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    WHITESPACE      reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    DOT             reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    COMMENT_START   reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    REVERSE_SOLIDUS reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    PLUS            reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    MINUS           reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)
    LITERAL_STR_QUOTE reduce using rule 70 (literal_string_char -> UNICODE_NUMBER .)


state 70

    (71) literal_string_char -> UNICODE_PUNCTUATION .

    ASCII_CHAR      reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    ASCII_DIGIT     reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_CHAR    reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_NUMBER  reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_PUNCTUATION reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_CONTROL reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_SYMBOL  reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_SEPARATOR reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    UNICODE_PRIVATE_USE reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    BASIC_STR_QUOTE reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    DASH            reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    UNDERSCORE      reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    WHITESPACE      reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    DOT             reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    COMMENT_START   reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    REVERSE_SOLIDUS reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    PLUS            reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    MINUS           reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)
    LITERAL_STR_QUOTE reduce using rule 71 (literal_string_char -> UNICODE_PUNCTUATION .)


state 71

    (72) literal_string_char -> UNICODE_CONTROL .

    ASCII_CHAR      reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    ASCII_DIGIT     reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    UNICODE_CHAR    reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    UNICODE_NUMBER  reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    UNICODE_PUNCTUATION reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    UNICODE_CONTROL reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    UNICODE_SYMBOL  reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    UNICODE_SEPARATOR reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    UNICODE_PRIVATE_USE reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    BASIC_STR_QUOTE reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    DASH            reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    UNDERSCORE      reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    WHITESPACE      reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    DOT             reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    COMMENT_START   reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    REVERSE_SOLIDUS reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    PLUS            reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    MINUS           reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)
    LITERAL_STR_QUOTE reduce using rule 72 (literal_string_char -> UNICODE_CONTROL .)


state 72

    (73) literal_string_char -> UNICODE_SYMBOL .

    ASCII_CHAR      reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    ASCII_DIGIT     reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    UNICODE_CHAR    reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    UNICODE_NUMBER  reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    UNICODE_PUNCTUATION reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    UNICODE_CONTROL reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    UNICODE_SYMBOL  reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    UNICODE_SEPARATOR reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    UNICODE_PRIVATE_USE reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    BASIC_STR_QUOTE reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    DASH            reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    UNDERSCORE      reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    WHITESPACE      reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    DOT             reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    COMMENT_START   reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    REVERSE_SOLIDUS reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    PLUS            reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    MINUS           reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)
    LITERAL_STR_QUOTE reduce using rule 73 (literal_string_char -> UNICODE_SYMBOL .)


state 73

    (74) literal_string_char -> UNICODE_SEPARATOR .

    ASCII_CHAR      reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    ASCII_DIGIT     reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    UNICODE_CHAR    reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    UNICODE_NUMBER  reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    UNICODE_PUNCTUATION reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    UNICODE_CONTROL reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    UNICODE_SYMBOL  reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    UNICODE_SEPARATOR reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    UNICODE_PRIVATE_USE reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    BASIC_STR_QUOTE reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    DASH            reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    UNDERSCORE      reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    WHITESPACE      reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    DOT             reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    COMMENT_START   reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    REVERSE_SOLIDUS reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    PLUS            reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    MINUS           reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)
    LITERAL_STR_QUOTE reduce using rule 74 (literal_string_char -> UNICODE_SEPARATOR .)


state 74

    (75) literal_string_char -> UNICODE_PRIVATE_USE .

    ASCII_CHAR      reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    ASCII_DIGIT     reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_CHAR    reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_NUMBER  reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_PUNCTUATION reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_CONTROL reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_SYMBOL  reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_SEPARATOR reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    UNICODE_PRIVATE_USE reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    BASIC_STR_QUOTE reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    DASH            reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    UNDERSCORE      reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    WHITESPACE      reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    DOT             reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    COMMENT_START   reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    REVERSE_SOLIDUS reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    PLUS            reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    MINUS           reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)
    LITERAL_STR_QUOTE reduce using rule 75 (literal_string_char -> UNICODE_PRIVATE_USE .)


state 75

    (76) literal_string_char -> BASIC_STR_QUOTE .

    ASCII_CHAR      reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    ASCII_DIGIT     reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    UNICODE_CHAR    reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    UNICODE_NUMBER  reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    UNICODE_PUNCTUATION reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    UNICODE_CONTROL reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    UNICODE_SYMBOL  reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    UNICODE_SEPARATOR reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    UNICODE_PRIVATE_USE reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    BASIC_STR_QUOTE reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    DASH            reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    UNDERSCORE      reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    WHITESPACE      reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    DOT             reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    COMMENT_START   reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    REVERSE_SOLIDUS reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    PLUS            reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    MINUS           reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)
    LITERAL_STR_QUOTE reduce using rule 76 (literal_string_char -> BASIC_STR_QUOTE .)


state 76

    (77) literal_string_char -> DASH .

    ASCII_CHAR      reduce using rule 77 (literal_string_char -> DASH .)
    ASCII_DIGIT     reduce using rule 77 (literal_string_char -> DASH .)
    UNICODE_CHAR    reduce using rule 77 (literal_string_char -> DASH .)
    UNICODE_NUMBER  reduce using rule 77 (literal_string_char -> DASH .)
    UNICODE_PUNCTUATION reduce using rule 77 (literal_string_char -> DASH .)
    UNICODE_CONTROL reduce using rule 77 (literal_string_char -> DASH .)
    UNICODE_SYMBOL  reduce using rule 77 (literal_string_char -> DASH .)
    UNICODE_SEPARATOR reduce using rule 77 (literal_string_char -> DASH .)
    UNICODE_PRIVATE_USE reduce using rule 77 (literal_string_char -> DASH .)
    BASIC_STR_QUOTE reduce using rule 77 (literal_string_char -> DASH .)
    DASH            reduce using rule 77 (literal_string_char -> DASH .)
    UNDERSCORE      reduce using rule 77 (literal_string_char -> DASH .)
    WHITESPACE      reduce using rule 77 (literal_string_char -> DASH .)
    DOT             reduce using rule 77 (literal_string_char -> DASH .)
    COMMENT_START   reduce using rule 77 (literal_string_char -> DASH .)
    REVERSE_SOLIDUS reduce using rule 77 (literal_string_char -> DASH .)
    PLUS            reduce using rule 77 (literal_string_char -> DASH .)
    MINUS           reduce using rule 77 (literal_string_char -> DASH .)
    LITERAL_STR_QUOTE reduce using rule 77 (literal_string_char -> DASH .)


state 77

    (78) literal_string_char -> UNDERSCORE .

    ASCII_CHAR      reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    ASCII_DIGIT     reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    UNICODE_CHAR    reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    UNICODE_NUMBER  reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    UNICODE_PUNCTUATION reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    UNICODE_CONTROL reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    UNICODE_SYMBOL  reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    UNICODE_SEPARATOR reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    UNICODE_PRIVATE_USE reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    BASIC_STR_QUOTE reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    DASH            reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    UNDERSCORE      reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    WHITESPACE      reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    DOT             reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    COMMENT_START   reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    REVERSE_SOLIDUS reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    PLUS            reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    MINUS           reduce using rule 78 (literal_string_char -> UNDERSCORE .)
    LITERAL_STR_QUOTE reduce using rule 78 (literal_string_char -> UNDERSCORE .)


state 78

    (79) literal_string_char -> WHITESPACE .

    ASCII_CHAR      reduce using rule 79 (literal_string_char -> WHITESPACE .)
    ASCII_DIGIT     reduce using rule 79 (literal_string_char -> WHITESPACE .)
    UNICODE_CHAR    reduce using rule 79 (literal_string_char -> WHITESPACE .)
    UNICODE_NUMBER  reduce using rule 79 (literal_string_char -> WHITESPACE .)
    UNICODE_PUNCTUATION reduce using rule 79 (literal_string_char -> WHITESPACE .)
    UNICODE_CONTROL reduce using rule 79 (literal_string_char -> WHITESPACE .)
    UNICODE_SYMBOL  reduce using rule 79 (literal_string_char -> WHITESPACE .)
    UNICODE_SEPARATOR reduce using rule 79 (literal_string_char -> WHITESPACE .)
    UNICODE_PRIVATE_USE reduce using rule 79 (literal_string_char -> WHITESPACE .)
    BASIC_STR_QUOTE reduce using rule 79 (literal_string_char -> WHITESPACE .)
    DASH            reduce using rule 79 (literal_string_char -> WHITESPACE .)
    UNDERSCORE      reduce using rule 79 (literal_string_char -> WHITESPACE .)
    WHITESPACE      reduce using rule 79 (literal_string_char -> WHITESPACE .)
    DOT             reduce using rule 79 (literal_string_char -> WHITESPACE .)
    COMMENT_START   reduce using rule 79 (literal_string_char -> WHITESPACE .)
    REVERSE_SOLIDUS reduce using rule 79 (literal_string_char -> WHITESPACE .)
    PLUS            reduce using rule 79 (literal_string_char -> WHITESPACE .)
    MINUS           reduce using rule 79 (literal_string_char -> WHITESPACE .)
    LITERAL_STR_QUOTE reduce using rule 79 (literal_string_char -> WHITESPACE .)


state 79

    (80) literal_string_char -> DOT .

    ASCII_CHAR      reduce using rule 80 (literal_string_char -> DOT .)
    ASCII_DIGIT     reduce using rule 80 (literal_string_char -> DOT .)
    UNICODE_CHAR    reduce using rule 80 (literal_string_char -> DOT .)
    UNICODE_NUMBER  reduce using rule 80 (literal_string_char -> DOT .)
    UNICODE_PUNCTUATION reduce using rule 80 (literal_string_char -> DOT .)
    UNICODE_CONTROL reduce using rule 80 (literal_string_char -> DOT .)
    UNICODE_SYMBOL  reduce using rule 80 (literal_string_char -> DOT .)
    UNICODE_SEPARATOR reduce using rule 80 (literal_string_char -> DOT .)
    UNICODE_PRIVATE_USE reduce using rule 80 (literal_string_char -> DOT .)
    BASIC_STR_QUOTE reduce using rule 80 (literal_string_char -> DOT .)
    DASH            reduce using rule 80 (literal_string_char -> DOT .)
    UNDERSCORE      reduce using rule 80 (literal_string_char -> DOT .)
    WHITESPACE      reduce using rule 80 (literal_string_char -> DOT .)
    DOT             reduce using rule 80 (literal_string_char -> DOT .)
    COMMENT_START   reduce using rule 80 (literal_string_char -> DOT .)
    REVERSE_SOLIDUS reduce using rule 80 (literal_string_char -> DOT .)
    PLUS            reduce using rule 80 (literal_string_char -> DOT .)
    MINUS           reduce using rule 80 (literal_string_char -> DOT .)
    LITERAL_STR_QUOTE reduce using rule 80 (literal_string_char -> DOT .)


state 80

    (81) literal_string_char -> COMMENT_START .

    ASCII_CHAR      reduce using rule 81 (literal_string_char -> COMMENT_START .)
    ASCII_DIGIT     reduce using rule 81 (literal_string_char -> COMMENT_START .)
    UNICODE_CHAR    reduce using rule 81 (literal_string_char -> COMMENT_START .)
    UNICODE_NUMBER  reduce using rule 81 (literal_string_char -> COMMENT_START .)
    UNICODE_PUNCTUATION reduce using rule 81 (literal_string_char -> COMMENT_START .)
    UNICODE_CONTROL reduce using rule 81 (literal_string_char -> COMMENT_START .)
    UNICODE_SYMBOL  reduce using rule 81 (literal_string_char -> COMMENT_START .)
    UNICODE_SEPARATOR reduce using rule 81 (literal_string_char -> COMMENT_START .)
    UNICODE_PRIVATE_USE reduce using rule 81 (literal_string_char -> COMMENT_START .)
    BASIC_STR_QUOTE reduce using rule 81 (literal_string_char -> COMMENT_START .)
    DASH            reduce using rule 81 (literal_string_char -> COMMENT_START .)
    UNDERSCORE      reduce using rule 81 (literal_string_char -> COMMENT_START .)
    WHITESPACE      reduce using rule 81 (literal_string_char -> COMMENT_START .)
    DOT             reduce using rule 81 (literal_string_char -> COMMENT_START .)
    COMMENT_START   reduce using rule 81 (literal_string_char -> COMMENT_START .)
    REVERSE_SOLIDUS reduce using rule 81 (literal_string_char -> COMMENT_START .)
    PLUS            reduce using rule 81 (literal_string_char -> COMMENT_START .)
    MINUS           reduce using rule 81 (literal_string_char -> COMMENT_START .)
    LITERAL_STR_QUOTE reduce using rule 81 (literal_string_char -> COMMENT_START .)


state 81

    (82) literal_string_char -> REVERSE_SOLIDUS .

    ASCII_CHAR      reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    ASCII_DIGIT     reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    UNICODE_CHAR    reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    UNICODE_NUMBER  reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    UNICODE_PUNCTUATION reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    UNICODE_CONTROL reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    UNICODE_SYMBOL  reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    UNICODE_SEPARATOR reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    UNICODE_PRIVATE_USE reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    BASIC_STR_QUOTE reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    DASH            reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    UNDERSCORE      reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    WHITESPACE      reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    DOT             reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    COMMENT_START   reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    REVERSE_SOLIDUS reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    PLUS            reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    MINUS           reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)
    LITERAL_STR_QUOTE reduce using rule 82 (literal_string_char -> REVERSE_SOLIDUS .)


state 82

    (83) literal_string_char -> PLUS .

    ASCII_CHAR      reduce using rule 83 (literal_string_char -> PLUS .)
    ASCII_DIGIT     reduce using rule 83 (literal_string_char -> PLUS .)
    UNICODE_CHAR    reduce using rule 83 (literal_string_char -> PLUS .)
    UNICODE_NUMBER  reduce using rule 83 (literal_string_char -> PLUS .)
    UNICODE_PUNCTUATION reduce using rule 83 (literal_string_char -> PLUS .)
    UNICODE_CONTROL reduce using rule 83 (literal_string_char -> PLUS .)
    UNICODE_SYMBOL  reduce using rule 83 (literal_string_char -> PLUS .)
    UNICODE_SEPARATOR reduce using rule 83 (literal_string_char -> PLUS .)
    UNICODE_PRIVATE_USE reduce using rule 83 (literal_string_char -> PLUS .)
    BASIC_STR_QUOTE reduce using rule 83 (literal_string_char -> PLUS .)
    DASH            reduce using rule 83 (literal_string_char -> PLUS .)
    UNDERSCORE      reduce using rule 83 (literal_string_char -> PLUS .)
    WHITESPACE      reduce using rule 83 (literal_string_char -> PLUS .)
    DOT             reduce using rule 83 (literal_string_char -> PLUS .)
    COMMENT_START   reduce using rule 83 (literal_string_char -> PLUS .)
    REVERSE_SOLIDUS reduce using rule 83 (literal_string_char -> PLUS .)
    PLUS            reduce using rule 83 (literal_string_char -> PLUS .)
    MINUS           reduce using rule 83 (literal_string_char -> PLUS .)
    LITERAL_STR_QUOTE reduce using rule 83 (literal_string_char -> PLUS .)


state 83

    (84) literal_string_char -> MINUS .

    ASCII_CHAR      reduce using rule 84 (literal_string_char -> MINUS .)
    ASCII_DIGIT     reduce using rule 84 (literal_string_char -> MINUS .)
    UNICODE_CHAR    reduce using rule 84 (literal_string_char -> MINUS .)
    UNICODE_NUMBER  reduce using rule 84 (literal_string_char -> MINUS .)
    UNICODE_PUNCTUATION reduce using rule 84 (literal_string_char -> MINUS .)
    UNICODE_CONTROL reduce using rule 84 (literal_string_char -> MINUS .)
    UNICODE_SYMBOL  reduce using rule 84 (literal_string_char -> MINUS .)
    UNICODE_SEPARATOR reduce using rule 84 (literal_string_char -> MINUS .)
    UNICODE_PRIVATE_USE reduce using rule 84 (literal_string_char -> MINUS .)
    BASIC_STR_QUOTE reduce using rule 84 (literal_string_char -> MINUS .)
    DASH            reduce using rule 84 (literal_string_char -> MINUS .)
    UNDERSCORE      reduce using rule 84 (literal_string_char -> MINUS .)
    WHITESPACE      reduce using rule 84 (literal_string_char -> MINUS .)
    DOT             reduce using rule 84 (literal_string_char -> MINUS .)
    COMMENT_START   reduce using rule 84 (literal_string_char -> MINUS .)
    REVERSE_SOLIDUS reduce using rule 84 (literal_string_char -> MINUS .)
    PLUS            reduce using rule 84 (literal_string_char -> MINUS .)
    MINUS           reduce using rule 84 (literal_string_char -> MINUS .)
    LITERAL_STR_QUOTE reduce using rule 84 (literal_string_char -> MINUS .)


state 84

    (3) expression_list -> expression NEWLINE expression_list .

    $end            reduce using rule 3 (expression_list -> expression NEWLINE expression_list .)


state 85

    (10) comment_string -> comment_char comment_string .

    NEWLINE         reduce using rule 10 (comment_string -> comment_char comment_string .)
    $end            reduce using rule 10 (comment_string -> comment_char comment_string .)


state 86

    (21) key_val -> key ASSIGNMENT value .

    COMMENT_START   reduce using rule 21 (key_val -> key ASSIGNMENT value .)
    NEWLINE         reduce using rule 21 (key_val -> key ASSIGNMENT value .)
    $end            reduce using rule 21 (key_val -> key ASSIGNMENT value .)


state 87

    (37) value -> basic_string .

    COMMENT_START   reduce using rule 37 (value -> basic_string .)
    NEWLINE         reduce using rule 37 (value -> basic_string .)
    $end            reduce using rule 37 (value -> basic_string .)


state 88

    (38) value -> literal_string .

    COMMENT_START   reduce using rule 38 (value -> literal_string .)
    NEWLINE         reduce using rule 38 (value -> literal_string .)
    $end            reduce using rule 38 (value -> literal_string .)


state 89

    (39) value -> integer .
    (98) dec_float -> integer . DOT integer
    (99) dec_float -> integer . DOT integer exponent
    (100) dec_float -> integer . exponent
    (101) exponent -> . ASCII_CHAR integer

    COMMENT_START   reduce using rule 39 (value -> integer .)
    NEWLINE         reduce using rule 39 (value -> integer .)
    $end            reduce using rule 39 (value -> integer .)
    DOT             shift and go to state 112
    ASCII_CHAR      shift and go to state 114

    exponent                       shift and go to state 113

state 90

    (40) value -> float .

    COMMENT_START   reduce using rule 40 (value -> float .)
    NEWLINE         reduce using rule 40 (value -> float .)
    $end            reduce using rule 40 (value -> float .)


state 91

    (41) value -> boolean .

    COMMENT_START   reduce using rule 41 (value -> boolean .)
    NEWLINE         reduce using rule 41 (value -> boolean .)
    $end            reduce using rule 41 (value -> boolean .)


state 92

    (90) integer -> dec_int .

    DOT             reduce using rule 90 (integer -> dec_int .)
    ASCII_CHAR      reduce using rule 90 (integer -> dec_int .)
    COMMENT_START   reduce using rule 90 (integer -> dec_int .)
    NEWLINE         reduce using rule 90 (integer -> dec_int .)
    $end            reduce using rule 90 (integer -> dec_int .)


state 93

    (97) float -> dec_float .

    COMMENT_START   reduce using rule 97 (float -> dec_float .)
    NEWLINE         reduce using rule 97 (float -> dec_float .)
    $end            reduce using rule 97 (float -> dec_float .)


state 94

    (102) boolean -> true .

    COMMENT_START   reduce using rule 102 (boolean -> true .)
    NEWLINE         reduce using rule 102 (boolean -> true .)
    $end            reduce using rule 102 (boolean -> true .)


state 95

    (103) boolean -> false .

    COMMENT_START   reduce using rule 103 (boolean -> false .)
    NEWLINE         reduce using rule 103 (boolean -> false .)
    $end            reduce using rule 103 (boolean -> false .)


state 96

    (91) dec_int -> dec_int_sequence .

    DOT             reduce using rule 91 (dec_int -> dec_int_sequence .)
    ASCII_CHAR      reduce using rule 91 (dec_int -> dec_int_sequence .)
    COMMENT_START   reduce using rule 91 (dec_int -> dec_int_sequence .)
    NEWLINE         reduce using rule 91 (dec_int -> dec_int_sequence .)
    $end            reduce using rule 91 (dec_int -> dec_int_sequence .)


state 97

    (92) dec_int -> PLUS . dec_int_sequence
    (94) dec_int_sequence -> . dec_int_char
    (95) dec_int_sequence -> . dec_int_char dec_int_sequence
    (96) dec_int_char -> . ASCII_DIGIT

    ASCII_DIGIT     shift and go to state 101

    dec_int_sequence               shift and go to state 115
    dec_int_char                   shift and go to state 100

state 98

    (93) dec_int -> DASH . dec_int_sequence
    (94) dec_int_sequence -> . dec_int_char
    (95) dec_int_sequence -> . dec_int_char dec_int_sequence
    (96) dec_int_char -> . ASCII_DIGIT

    ASCII_DIGIT     shift and go to state 101

    dec_int_sequence               shift and go to state 116
    dec_int_char                   shift and go to state 100

state 99

    (104) true -> ASCII_CHAR . ASCII_CHAR ASCII_CHAR ASCII_CHAR
    (105) false -> ASCII_CHAR . ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR

    ASCII_CHAR      shift and go to state 117


state 100

    (94) dec_int_sequence -> dec_int_char .
    (95) dec_int_sequence -> dec_int_char . dec_int_sequence
    (94) dec_int_sequence -> . dec_int_char
    (95) dec_int_sequence -> . dec_int_char dec_int_sequence
    (96) dec_int_char -> . ASCII_DIGIT

    DOT             reduce using rule 94 (dec_int_sequence -> dec_int_char .)
    ASCII_CHAR      reduce using rule 94 (dec_int_sequence -> dec_int_char .)
    COMMENT_START   reduce using rule 94 (dec_int_sequence -> dec_int_char .)
    NEWLINE         reduce using rule 94 (dec_int_sequence -> dec_int_char .)
    $end            reduce using rule 94 (dec_int_sequence -> dec_int_char .)
    ASCII_DIGIT     shift and go to state 101

    dec_int_char                   shift and go to state 100
    dec_int_sequence               shift and go to state 118

state 101

    (96) dec_int_char -> ASCII_DIGIT .

    ASCII_DIGIT     reduce using rule 96 (dec_int_char -> ASCII_DIGIT .)
    DOT             reduce using rule 96 (dec_int_char -> ASCII_DIGIT .)
    ASCII_CHAR      reduce using rule 96 (dec_int_char -> ASCII_DIGIT .)
    COMMENT_START   reduce using rule 96 (dec_int_char -> ASCII_DIGIT .)
    NEWLINE         reduce using rule 96 (dec_int_char -> ASCII_DIGIT .)
    $end            reduce using rule 96 (dec_int_char -> ASCII_DIGIT .)


state 102

    (36) dotted_key -> simple_key DOT simple_key .

    ASSIGNMENT      reduce using rule 36 (dotted_key -> simple_key DOT simple_key .)


state 103

    (43) basic_string -> BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE .

    DOT             reduce using rule 43 (basic_string -> BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE .)
    ASSIGNMENT      reduce using rule 43 (basic_string -> BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE .)
    COMMENT_START   reduce using rule 43 (basic_string -> BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE .)
    NEWLINE         reduce using rule 43 (basic_string -> BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE .)
    $end            reduce using rule 43 (basic_string -> BASIC_STR_QUOTE basic_string_sequence BASIC_STR_QUOTE .)


state 104

    (45) basic_string_sequence -> basic_string_char basic_string_sequence .

    BASIC_STR_QUOTE reduce using rule 45 (basic_string_sequence -> basic_string_char basic_string_sequence .)


state 105

    (88) escape_char -> REVERSE_SOLIDUS .

    ASCII_CHAR      reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    ASCII_DIGIT     reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    UNICODE_CHAR    reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    UNICODE_NUMBER  reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    UNICODE_PUNCTUATION reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    UNICODE_CONTROL reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    UNICODE_SYMBOL  reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    UNICODE_SEPARATOR reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    UNICODE_PRIVATE_USE reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    LITERAL_STR_QUOTE reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    DASH            reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    UNDERSCORE      reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    WHITESPACE      reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    DOT             reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    COMMENT_START   reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    PLUS            reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    REVERSE_SOLIDUS reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)
    BASIC_STR_QUOTE reduce using rule 88 (escape_char -> REVERSE_SOLIDUS .)


state 106

    (85) escape -> REVERSE_SOLIDUS escape_char .

    ASCII_CHAR      reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    ASCII_DIGIT     reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    UNICODE_CHAR    reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    UNICODE_NUMBER  reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    UNICODE_PUNCTUATION reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    UNICODE_CONTROL reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    UNICODE_SYMBOL  reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    UNICODE_SEPARATOR reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    UNICODE_PRIVATE_USE reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    LITERAL_STR_QUOTE reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    DASH            reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    UNDERSCORE      reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    WHITESPACE      reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    DOT             reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    COMMENT_START   reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    PLUS            reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    REVERSE_SOLIDUS reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)
    BASIC_STR_QUOTE reduce using rule 85 (escape -> REVERSE_SOLIDUS escape_char .)


state 107

    (86) escape_char -> LITERAL_STR_QUOTE .

    ASCII_CHAR      reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    ASCII_DIGIT     reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    UNICODE_CHAR    reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    UNICODE_NUMBER  reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    UNICODE_PUNCTUATION reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    UNICODE_CONTROL reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    UNICODE_SYMBOL  reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    UNICODE_SEPARATOR reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    UNICODE_PRIVATE_USE reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    LITERAL_STR_QUOTE reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    DASH            reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    UNDERSCORE      reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    WHITESPACE      reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    DOT             reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    COMMENT_START   reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    PLUS            reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    REVERSE_SOLIDUS reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)
    BASIC_STR_QUOTE reduce using rule 86 (escape_char -> LITERAL_STR_QUOTE .)


state 108

    (87) escape_char -> BASIC_STR_QUOTE .

    ASCII_CHAR      reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    ASCII_DIGIT     reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    UNICODE_CHAR    reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    UNICODE_NUMBER  reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    UNICODE_PUNCTUATION reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    UNICODE_CONTROL reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    UNICODE_SYMBOL  reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    UNICODE_SEPARATOR reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    UNICODE_PRIVATE_USE reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    LITERAL_STR_QUOTE reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    DASH            reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    UNDERSCORE      reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    WHITESPACE      reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    DOT             reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    COMMENT_START   reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    PLUS            reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    REVERSE_SOLIDUS reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)
    BASIC_STR_QUOTE reduce using rule 87 (escape_char -> BASIC_STR_QUOTE .)


state 109

    (89) escape_char -> ASCII_CHAR .

    ASCII_CHAR      reduce using rule 89 (escape_char -> ASCII_CHAR .)
    ASCII_DIGIT     reduce using rule 89 (escape_char -> ASCII_CHAR .)
    UNICODE_CHAR    reduce using rule 89 (escape_char -> ASCII_CHAR .)
    UNICODE_NUMBER  reduce using rule 89 (escape_char -> ASCII_CHAR .)
    UNICODE_PUNCTUATION reduce using rule 89 (escape_char -> ASCII_CHAR .)
    UNICODE_CONTROL reduce using rule 89 (escape_char -> ASCII_CHAR .)
    UNICODE_SYMBOL  reduce using rule 89 (escape_char -> ASCII_CHAR .)
    UNICODE_SEPARATOR reduce using rule 89 (escape_char -> ASCII_CHAR .)
    UNICODE_PRIVATE_USE reduce using rule 89 (escape_char -> ASCII_CHAR .)
    LITERAL_STR_QUOTE reduce using rule 89 (escape_char -> ASCII_CHAR .)
    DASH            reduce using rule 89 (escape_char -> ASCII_CHAR .)
    UNDERSCORE      reduce using rule 89 (escape_char -> ASCII_CHAR .)
    WHITESPACE      reduce using rule 89 (escape_char -> ASCII_CHAR .)
    DOT             reduce using rule 89 (escape_char -> ASCII_CHAR .)
    COMMENT_START   reduce using rule 89 (escape_char -> ASCII_CHAR .)
    PLUS            reduce using rule 89 (escape_char -> ASCII_CHAR .)
    REVERSE_SOLIDUS reduce using rule 89 (escape_char -> ASCII_CHAR .)
    BASIC_STR_QUOTE reduce using rule 89 (escape_char -> ASCII_CHAR .)


state 110

    (64) literal_string -> LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE .

    DOT             reduce using rule 64 (literal_string -> LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE .)
    ASSIGNMENT      reduce using rule 64 (literal_string -> LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE .)
    COMMENT_START   reduce using rule 64 (literal_string -> LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE .)
    NEWLINE         reduce using rule 64 (literal_string -> LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE .)
    $end            reduce using rule 64 (literal_string -> LITERAL_STR_QUOTE literal_string_sequence LITERAL_STR_QUOTE .)


state 111

    (66) literal_string_sequence -> literal_string_char literal_string_sequence .

    LITERAL_STR_QUOTE reduce using rule 66 (literal_string_sequence -> literal_string_char literal_string_sequence .)


state 112

    (98) dec_float -> integer DOT . integer
    (99) dec_float -> integer DOT . integer exponent
    (90) integer -> . dec_int
    (91) dec_int -> . dec_int_sequence
    (92) dec_int -> . PLUS dec_int_sequence
    (93) dec_int -> . DASH dec_int_sequence
    (94) dec_int_sequence -> . dec_int_char
    (95) dec_int_sequence -> . dec_int_char dec_int_sequence
    (96) dec_int_char -> . ASCII_DIGIT

    PLUS            shift and go to state 97
    DASH            shift and go to state 98
    ASCII_DIGIT     shift and go to state 101

    integer                        shift and go to state 119
    dec_int                        shift and go to state 92
    dec_int_sequence               shift and go to state 96
    dec_int_char                   shift and go to state 100

state 113

    (100) dec_float -> integer exponent .

    COMMENT_START   reduce using rule 100 (dec_float -> integer exponent .)
    NEWLINE         reduce using rule 100 (dec_float -> integer exponent .)
    $end            reduce using rule 100 (dec_float -> integer exponent .)


state 114

    (101) exponent -> ASCII_CHAR . integer
    (90) integer -> . dec_int
    (91) dec_int -> . dec_int_sequence
    (92) dec_int -> . PLUS dec_int_sequence
    (93) dec_int -> . DASH dec_int_sequence
    (94) dec_int_sequence -> . dec_int_char
    (95) dec_int_sequence -> . dec_int_char dec_int_sequence
    (96) dec_int_char -> . ASCII_DIGIT

    PLUS            shift and go to state 97
    DASH            shift and go to state 98
    ASCII_DIGIT     shift and go to state 101

    integer                        shift and go to state 120
    dec_int                        shift and go to state 92
    dec_int_sequence               shift and go to state 96
    dec_int_char                   shift and go to state 100

state 115

    (92) dec_int -> PLUS dec_int_sequence .

    DOT             reduce using rule 92 (dec_int -> PLUS dec_int_sequence .)
    ASCII_CHAR      reduce using rule 92 (dec_int -> PLUS dec_int_sequence .)
    COMMENT_START   reduce using rule 92 (dec_int -> PLUS dec_int_sequence .)
    NEWLINE         reduce using rule 92 (dec_int -> PLUS dec_int_sequence .)
    $end            reduce using rule 92 (dec_int -> PLUS dec_int_sequence .)


state 116

    (93) dec_int -> DASH dec_int_sequence .

    DOT             reduce using rule 93 (dec_int -> DASH dec_int_sequence .)
    ASCII_CHAR      reduce using rule 93 (dec_int -> DASH dec_int_sequence .)
    COMMENT_START   reduce using rule 93 (dec_int -> DASH dec_int_sequence .)
    NEWLINE         reduce using rule 93 (dec_int -> DASH dec_int_sequence .)
    $end            reduce using rule 93 (dec_int -> DASH dec_int_sequence .)


state 117

    (104) true -> ASCII_CHAR ASCII_CHAR . ASCII_CHAR ASCII_CHAR
    (105) false -> ASCII_CHAR ASCII_CHAR . ASCII_CHAR ASCII_CHAR ASCII_CHAR

    ASCII_CHAR      shift and go to state 121


state 118

    (95) dec_int_sequence -> dec_int_char dec_int_sequence .

    DOT             reduce using rule 95 (dec_int_sequence -> dec_int_char dec_int_sequence .)
    ASCII_CHAR      reduce using rule 95 (dec_int_sequence -> dec_int_char dec_int_sequence .)
    COMMENT_START   reduce using rule 95 (dec_int_sequence -> dec_int_char dec_int_sequence .)
    NEWLINE         reduce using rule 95 (dec_int_sequence -> dec_int_char dec_int_sequence .)
    $end            reduce using rule 95 (dec_int_sequence -> dec_int_char dec_int_sequence .)


state 119

    (98) dec_float -> integer DOT integer .
    (99) dec_float -> integer DOT integer . exponent
    (101) exponent -> . ASCII_CHAR integer

    COMMENT_START   reduce using rule 98 (dec_float -> integer DOT integer .)
    NEWLINE         reduce using rule 98 (dec_float -> integer DOT integer .)
    $end            reduce using rule 98 (dec_float -> integer DOT integer .)
    ASCII_CHAR      shift and go to state 114

    exponent                       shift and go to state 122

state 120

    (101) exponent -> ASCII_CHAR integer .

    COMMENT_START   reduce using rule 101 (exponent -> ASCII_CHAR integer .)
    NEWLINE         reduce using rule 101 (exponent -> ASCII_CHAR integer .)
    $end            reduce using rule 101 (exponent -> ASCII_CHAR integer .)


state 121

    (104) true -> ASCII_CHAR ASCII_CHAR ASCII_CHAR . ASCII_CHAR
    (105) false -> ASCII_CHAR ASCII_CHAR ASCII_CHAR . ASCII_CHAR ASCII_CHAR

    ASCII_CHAR      shift and go to state 123


state 122

    (99) dec_float -> integer DOT integer exponent .

    COMMENT_START   reduce using rule 99 (dec_float -> integer DOT integer exponent .)
    NEWLINE         reduce using rule 99 (dec_float -> integer DOT integer exponent .)
    $end            reduce using rule 99 (dec_float -> integer DOT integer exponent .)


state 123

    (104) true -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR .
    (105) false -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR . ASCII_CHAR

    COMMENT_START   reduce using rule 104 (true -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR .)
    NEWLINE         reduce using rule 104 (true -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR .)
    $end            reduce using rule 104 (true -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR .)
    ASCII_CHAR      shift and go to state 124


state 124

    (105) false -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR .

    COMMENT_START   reduce using rule 105 (false -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR .)
    NEWLINE         reduce using rule 105 (false -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR .)
    $end            reduce using rule 105 (false -> ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR ASCII_CHAR .)

